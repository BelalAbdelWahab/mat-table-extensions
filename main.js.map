{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./dist/cdk-table-exporter/fesm5/cdk-table-exporter.js","webpack:///./dist/mat-table-exporter/fesm5/mat-table-exporter.js","webpack:///./dist/mat-table-filter/fesm5/mat-table-filter.js","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-to-showcase.ts","webpack:///./src/app/components/base-component.ts","webpack:///./src/app/components/example-viewer/example-viewer.component.css","webpack:///./src/app/components/example-viewer/example-viewer.component.html","webpack:///./src/app/components/example-viewer/example-viewer.component.ts","webpack:///./src/app/components/examples/array-filter/array-filter.component.css","webpack:///./src/app/components/examples/array-filter/array-filter.component.html","webpack:///./src/app/components/examples/array-filter/array-filter.component.ts","webpack:///./src/app/components/examples/brief-exporter/brief-exporter.component.css","webpack:///./src/app/components/examples/brief-exporter/brief-exporter.component.html","webpack:///./src/app/components/examples/brief-exporter/brief-exporter.component.ts","webpack:///./src/app/components/examples/custom-column-filter/custom-column-filter.component.css","webpack:///./src/app/components/examples/custom-column-filter/custom-column-filter.component.html","webpack:///./src/app/components/examples/custom-column-filter/custom-column-filter.component.ts","webpack:///./src/app/components/examples/custom-exporter/custom-exporter.component.css","webpack:///./src/app/components/examples/custom-exporter/custom-exporter.component.html","webpack:///./src/app/components/examples/custom-exporter/custom-exporter.component.ts","webpack:///./src/app/components/examples/property-options/property-options.component.css","webpack:///./src/app/components/examples/property-options/property-options.component.html","webpack:///./src/app/components/examples/property-options/property-options.component.ts","webpack:///./src/app/components/examples/simple-filter/simple-filter.component.css","webpack:///./src/app/components/examples/simple-filter/simple-filter.component.html","webpack:///./src/app/components/examples/simple-filter/simple-filter.component.ts","webpack:///./src/app/components/exporter/exporter.component.css","webpack:///./src/app/components/exporter/exporter.component.html","webpack:///./src/app/components/exporter/exporter.component.ts","webpack:///./src/app/components/filter/filter.component.css","webpack:///./src/app/components/filter/filter.component.html","webpack:///./src/app/components/filter/filter.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AAChB;AACF;AACE;AAC4F;;AAEhI;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,wBAAwB,iEAAc;AACtC;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,qBAAqB;AACrB,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wCAAwC,+BAA+B;AACvE,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,QAAQ,yDAAM;AACd;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,0CAA0C,EAAE,MAAM,qDAAqD;AACvG,yFAAyF;AACzF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO,mDAAK,EAAE;AACvC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,yBAAyB,OAAO,oDAAM,EAAE;AACxC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD,WAAW;AACjE,6DAA6D,sEAAgB,EAAE,kDAAkD,kCAAkC,EAAE,kDAAkD;AACvN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,qDAAqD,WAAW;AAChE,4DAA4D,sEAAgB,EAAE,iDAAiD,iCAAiC,EAAE,iDAAiD;AACnN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,0CAAK;AAC7B;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,uBAAuB,EAAE,OAAO,GAAG;AACpE,mBAAmB,EAAE;AACrB,uBAAuB,0CAAK;AAC5B;AACA;AACA;AACA;AACA,QAAQ,0CAAK;AACb,eAAe,kDAAK;AACpB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,qBAAqB,EAAE,yEAAyE;AAChG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,UAAU,aAAa,EAAE,EAAE;AACrD;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,qDAAqD,WAAW;AAChE,4DAA4D,sEAAgB,EAAE,iDAAiD,iCAAiC,EAAE,iDAAiD;AACnN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD,WAAW;AACjE,6DAA6D,sEAAgB,EAAE,kDAAkD,kCAAkC,EAAE,kDAAkD;AACvN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,0CAAK;AACpB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,qDAAqD,WAAW;AAChE,4DAA4D,sEAAgB,EAAE,iDAAiD,iCAAiC,EAAE,iDAAiD;AACnN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD;AACxD,SAAS,OAAO,sDAAQ;AACxB,MAAM;AACN,+DAA+D,sEAAgB,EAAE,oDAAoD,kCAAkC,4DAAM,CAAC,sDAAQ,GAAG,EAAE,oDAAoD;AAC/O;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,iBAAiB;AACxC,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,kBAAkB;AACzC;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,uDAAuD,WAAW;AAClE,8DAA8D,sEAAgB,EAAE,mDAAmD,mCAAmC,EAAE,mDAAmD;AAC3N;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE8jB;;AAE9jB,8C;;;;;;;;;;;;ACjmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACqE;AAC1C;AAC8D;AAC6d;;AAExlB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4DAA4D;AAC5D,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,wEAAqB,EAAE;AACvC,SAAS,OAAO,uEAAoB,EAAE;AACtC,SAAS,OAAO,0DAAQ,gBAAgB,OAAO,kDAAI,EAAE,GAAG,OAAO,kDAAI,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG;AAC5F,SAAS,OAAO,8DAAgB;AAChC,MAAM;AACN;AACA,CAAC,CAAC,mEAAgB;;AAElB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,wBAAwB,gEAAc;AACtC,wBAAwB,yEAAsB;AAC9C;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE6D;;AAE7D,8C;;;;;;;;;;;;AC/LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACtB;AACO;AACF;AAC6F;AACT;AAC9F;;AAElC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,gBAAgB,uDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,sDAAO;AACtB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB,yDAAU,CAAC,sDAAO,WAAW,sDAAO;AACpD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD,WAAW;AACnE,+DAA+D,sEAAgB,EAAE,oDAAoD,oCAAoC,EAAE,oDAAoD;AAC/N;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,+DAA+D,WAAW;AAC1E,sEAAsE,sEAAgB,EAAE,2DAA2D,2CAA2C,EAAE,2DAA2D;AAC3P;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,qCAAqC,sDAAQ,sDAAsD,uBAAuB;AAC1H;AACA,2BAA2B,EAAE;AAC7B,mCAAmC,wDAAS;AAC5C,oBAAoB,oDAAK,kBAAkB,oDAAK,eAAe,8CAAO;AACtE;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,oCAAoC,wDAAS;AAC7C,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,wBAAwB,uDAAU,YAAY;AAC9C;AACA,mCAAmC,EAAE;AACrC,0DAA0D,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,wDAAwD,EAAE;AAC1D;AACA,uCAAuC,EAAE;AACzC,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,iCAAiC,sDAAO;AACxC,uCAAuC,EAAE;AACzC,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,iCAAiC,wDAAS;AAC1C;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB,sDAAO;AACvB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAQ,WAAW,uDAAQ;AAC1C;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD;AACxD,SAAS,qCAAqC;AAC9C,SAAS;AACT,MAAM;AACN,+DAA+D,sEAAgB,EAAE,oDAAoD,kCAAkC,4DAAM,gCAAgC,4DAAM,yBAAyB,EAAE,oDAAoD;AAClS;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,yCAAyC,oDAAe;AACxD,wCAAwC,mEAAY;AACpD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,6DAA6D,2CAA2C,0BAA0B,mEAAmE;AACrM,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC,4BAA4B,EAAE;AAC9B;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS,8BAA8B;AACvC,SAAS,OAAO,0DAAQ,gBAAgB,OAAO,kDAAI,EAAE,GAAG,OAAO,kDAAI,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG;AAC5F,SAAS,OAAO,8DAAgB;AAChC,MAAM;AACN;AACA,yBAAyB,OAAO,mDAAK,EAAE;AACvC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,2BAA2B,OAAO,mDAAK,EAAE;AACzC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,wBAAwB,gEAAc;AACtC;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEwL;;AAExL,4C;;;;;;;;;;;AC5nBA,+CAA+C,0BAA0B,KAAK,2BAA2B,kBAAkB,mBAAmB,KAAK,+BAA+B,kBAAkB,KAAK,WAAW,4BAA4B,KAAK,4BAA4B,qBAAqB,KAAK,iCAAiC,uBAAuB,KAAK,8BAA8B,yBAAyB,wBAAwB,KAAK,sBAAsB,oBAAoB,sBAAsB,uBAAuB,0BAA0B,kBAAkB,qBAAqB,KAAK,2BAA2B,0BAA0B,oBAAoB,0BAA0B,mBAAmB,KAAK,2BAA2B,cAAc,KAAK,sBAAsB,oBAAoB,sBAAsB,uBAAuB,KAAK,YAAY,sBAAsB,uBAAuB,wBAAwB,uBAAuB,KAAK,YAAY,sBAAsB,uBAAuB,wBAAwB,4BAA4B,KAAK,yHAAyH,4BAA4B,0BAA0B,OAAO,KAAK,gDAAgD,2CAA2C,KAAK,0GAA0G,wCAAwC,kBAAkB,KAAK,uJAAuJ,6BAA6B,KAAK,qIAAqI,iBAAiB,KAAK,mDAAmD,m+G;;;;;;;;;;;ACAx4D,wjC;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,sBAAsB,CAAC;IACjC,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN+B;AACY;AAC3B;AACe;AACX;AAC7C,2CAA2C;AACqnB;AACtmB;AACqB;AACnB;AAEiB;AACN;AACV;AACd;AACI;AAC2C;AACM;AACoB;AACvB;AACY;AACN;AACG;AACxD;AAE3C,SAAS,aAAa;IAE3B,OAAO;QACL,GAAG,EAAE,KAAK;QACV,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE,KAAK;QACb,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE,KAAK;QACf,UAAU,EAAE,IAAI;QAChB,WAAW,EAAE,KAAK;KACnB,CAAC;AACJ,CAAC;AA4FD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAzFrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,0FAAiB;gBACjB,oFAAe;gBACf,2GAAsB;gBACtB,8GAAoB;gBACpB,qIAA2B;gBAC3B,iHAAqB;gBACrB,0HAAwB;gBACxB,oHAAsB;gBACtB,uHAAuB;aACxB;YACD,OAAO,EAAE;gBACP,qEAAgB;gBAChB,uEAAa;gBACb,0DAAW;gBACX,iEAAY;gBACZ,4DAAc,CAAC,OAAO,CAAC;oBACrB,MAAM,EAAE,+DAAU;oBAClB,aAAa,EAAE;wBACb,OAAO,EAAE,2DAAa;wBACtB,UAAU,EAAE,aAAa;qBAC1B;iBACF,CAAC;gBACF,4FAAuB;gBACvB,gEAAc,CAAC,UAAU,CAAC;oBACxB,KAAK,EAAE,UAAU;oBACjB,SAAS,EAAE;wBACT,QAAQ,EAAE,IAAI;wBACd,iBAAiB,EAAE,KAAK;qBACzB;oBACD,QAAQ,EAAE;wBACT,UAAU,EAAE;4BACV,QAAQ,EAAE,OAAO;yBAClB;qBACD;iBACF,CAAC;gBACF,qEAAgB;gBAChB,qEAAoB;gBACrB,yEAAsB;gBACrB,uEAAqB;gBACrB,gEAAc;gBACd,sEAAoB;gBACpB,iEAAe;gBACf,uEAAqB;gBACrB,+DAAa;gBACb,mEAAiB;gBACjB,gEAAc;gBACd,kEAAgB;gBAChB,qEAAmB;gBACnB,iEAAe;gBACf,kEAAgB;gBAChB,oEAAkB;gBAClB,mEAAiB;gBACjB,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,+DAAa;gBACb,qEAAmB;gBACnB,oEAAkB;gBAClB,sEAAoB;gBACpB,0EAAwB;gBACxB,gEAAc;gBACd,iEAAe;gBACf,iEAAe;gBACf,kEAAgB;gBAChB,iEAAe;gBACf,sEAAoB;gBACpB,mEAAiB;gBACjB,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,kEAAgB;gBAChB,kEAAgB;gBAChB,+DAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,4DAAY,CAAC;YACzB,eAAe,EAAE;gBACf,8GAAoB;gBACpB,oHAAsB;gBACtB,qIAA2B;gBAC3B,uHAAuB;gBACvB,iHAAqB;gBACrB,0HAAwB;aAEzB;SACF,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACjItB;AAAA;AAAA;AAAO,IAAM,gBAAgB,GAA4B,IAAI,GAAG,EAAE,CAAC;AAE5D,SAAS,aAAa,CAAC,YAAoB,EAAE,QAAgB,EAAE,WAAmB;IACvF,OAAO,UAAC,IAAS;QACf,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;QACzC,IAAM,aAAa,GAAG,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,EAAE;YAClB,IAAM,QAAQ,GAAG,IAAI,KAAK,EAAO,CAAC;YAClC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpB,gBAAgB,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;SAC9C;aAAM;YACL,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;;;;;;;;;;;;;ACdD;AAAA;AAAA;IAIE,uBAAsB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IACtD,CAAC;IAED,uCAAe,GAAf;QACE,IAAI,CAAC,eAAe,CAAC,MAAM,CACzB,SAAS,EACT,SAAS,CACV,CAAC;IACJ,CAAC;IAEH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;AChBD,yBAAyB,qBAAqB,sBAAsB,KAAK,wCAAwC,4BAA4B,0BAA0B,oBAAoB,8BAA8B,wBAAwB,6BAA6B,kCAAkC,KAAK,+CAA+C,qBAAqB,KAAK,uCAAuC,yBAAyB,eAAe,oBAAoB,KAAK,kCAAkC,gCAAgC,wBAAwB,KAAK,uCAAuC,oBAAoB,KAAK,0CAA0C,6EAA6E,kBAAkB,KAAK,uCAAuC,iBAAiB,KAAK,kCAAkC,qBAAqB,KAAK,wHAAwH,6CAA6C,KAAK,uDAAuD,unE;;;;;;;;;;;ACA7mC,0KAA0K,aAAa,27C;;;;;;;;;;;;;;;;;;ACA9H;AACY;AAOrE;IAyBE;IAAgB,CAAC;+BAzBN,sBAAsB;IAUjC,sBAAI,+CAAW;aAAf,UAAgB,IAAwB;YACtC,IAAI,CAAC,OAAO,GAAG,IAAI,mEAAe,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YACxC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YAC9C,uDAAuD;YACvD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,iEAAiE;YAC/G,IAAI,CAAC,KAAK,GAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,MAAM,GAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC9C,CAAC;;;OAAA;IASD,6CAAY,GAAZ;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IAEO,gDAAe,GAAvB,UAAwB,SAAiB;QACvC,OAAO,wBAAsB,CAAC,WAAW,GAAG,wBAAsB,CAAC,YAAY;YAC/E,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;YACxC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;IAC5B,CAAC;;IAjCuB,kCAAW,GAAW,WAAW,CAAC;IAClC,mCAAY,GAAW,kBAAkB,CAAC;IAOlE;QADC,2DAAK,EAAE;;;6DASP;IAlBU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,yIAA8C;;SAE/C,CAAC;;OACW,sBAAsB,CAqClC;IAAD,6BAAC;CAAA;AArCkC;;;;;;;;;;;;ACRnC,kCAAkC,sBAAsB,KAAK,mDAAmD,2Y;;;;;;;;;;;ACAhH,0jBAA0jB,kBAAkB,6VAA6V,eAAe,gaAAga,MAAM,4aAA4a,wBAAwB,8IAA8I,2BAA2B,8B;;;;;;;;;;;;;;;;;;;;;;ACAz5D;AACA;AACI;AACoB;AACrB;AAErD;IAAA;IAIA,CAAC;IAAD,cAAC;AAAD,CAAC;;AAED,IAAM,QAAQ,GAAc;IAC1B,EAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAC;IACxE,EAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAC;IACnE,EAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,IAAI,CAAC,EAAC;IACzD,EAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAC;IACrE,EAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAC;IAC1D,EAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAC;IAC/D,EAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAC;IAC/D,EAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAC;IAClE,EAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,CAAC,EAAC;IACvD,EAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAC;IACtE,EAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,EAAC;IAC5D,EAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,CAAC,EAAC;IACtD,EAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAC;IAC9D,EAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAC;IACtE,EAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAC;CAChE,CAAC;AAQH;IANA;QASE,qBAAgB,GAAa,CAAC,UAAU,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;QAE5D,uBAAkB,GAAa,CAAC,2DAAK,EAAE,2DAAK,CAAC,CAAC;IA+BzD,CAAC;IA7BC,kCAAG,GAAH,UAAI,KAAwB;QAC1B,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAE1B,gBAAgB;QAChB,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;YACxB,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;SACrD;QAED,wBAAwB;QACxB,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;SAClB;IACH,CAAC;IAED,qCAAM,GAAN,UAAO,IAAY;QACjB,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE7D,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACnD;IACH,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,IAAI,KAAK,EAAU,CAAC,CAAC,kCAAkC;QAC1F,IAAI,CAAC,UAAU,GAAG,+DAAc,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC;IAnCU,oBAAoB;QANhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,4IAA4C;;SAE7C,CAAC;QACD,sEAAa,CAAC,QAAQ,EAAE,wBAAwB,EAAE,cAAc,CAAC;OACrD,oBAAoB,CAoChC;IAAD,2BAAC;CAAA;AApCgC;;;;;;;;;;;;ACpCjC,sCAAsC,oBAAoB,6BAA6B,wBAAwB,uBAAuB,0BAA0B,KAAK,oBAAoB,qBAAqB,wBAAwB,KAAK,mDAAmD,+uB;;;;;;;;;;;ACA9R,8aAA8a,kBAAkB,iMAAiM,cAAc,uMAAuM,iBAAiB,mMAAmM,eAAe,oJAAoJ,2BAA2B,4MAA4M,6BAA6B,gBAAgB,2BAA2B,qR;;;;;;;;;;;;;;;;;;;;ACA/7C;AACA;AACF;AACL;AAQtD;IANA;QAOE,UAAK,GAAG,UAAU,CAAC;QACnB,qBAAgB,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IAQ9D,CAAC;IAJC,yCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAU,YAAY,CAAC,CAAC;QAChE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IANwB;QAAxB,+DAAS,CAAC,wEAAY,CAAC;wEAAY,wEAAY;6DAAC;IAHtC,sBAAsB;QANlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,kJAA8C;;SAE/C,CAAC;QACD,sEAAa,CAAC,UAAU,EAAE,0BAA0B,EAAE,2BAA2B,CAAC;OACtE,sBAAsB,CAUlC;IAAD,6BAAC;CAAA;AAVkC;AAmBnC,IAAM,YAAY,GAAc;IAC9B,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAC;IACjE,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAC;IAC7D,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAC;IAC9D,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAC;IAClE,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAC;IAC9D,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAC;IACjE,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAC;IAC/D,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;IAC5D,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAC;IAC9D,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAC;IAClE,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAC;IACtE,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAC;IACjE,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAC;IAClE,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAC;IAChE,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAC;CAChE,CAAC;;;;;;;;;;;;AC9CF,kCAAkC,sBAAsB,KAAK,mDAAmD,mb;;;;;;;;;;;ACAhH,ytBAAytB,cAAc,oNAAoN,qBAAqB,gJAAgJ,2BAA2B,8B;;;;;;;;;;;;;;;;;;;;;ACAzkC;AACI;AACC;AACL;AAElD;IAAA;IAGA,CAAC;IAAD,YAAC;AAAD,CAAC;;AAED,IAAM,MAAM,GAAY;IACvB,EAAC,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,OAAO,EAAC;IAC3C,EAAC,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,OAAO,EAAC;IAC3C,EAAC,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,OAAO,EAAC;IAC3C,EAAC,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,OAAO,EAAC;IAC3C,EAAC,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,OAAO,EAAC;IAC3C,EAAC,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,OAAO,EAAC;IAC3C,EAAC,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,OAAO,EAAC;CAC3C,CAAC;AAQF;IAOE;QAJA,qBAAgB,GAAa,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;IAKrD,CAAC;IAED,8CAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,+DAAc,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,GAAG,EAAC,IAAI,EAAE,UAAC,SAAiB;gBAC9C,OAAO,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,4CAA4C;YACzG,CAAC,EAAC,CAAC;IACL,CAAC;IAjBU,2BAA2B;QANvC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,oKAAoD;;SAErD,CAAC;QACD,sEAAa,CAAC,QAAQ,EAAE,gCAAgC,EAAE,2BAA2B,CAAC;;OAC1E,2BAA2B,CAkBvC;IAAD,kCAAC;CAAA;AAlBuC;;;;;;;;;;;;AC1BxC,sCAAsC,oBAAoB,6BAA6B,wBAAwB,uBAAuB,0BAA0B,KAAK,oBAAoB,qBAAqB,wBAAwB,KAAK,mDAAmD,mvB;;;;;;;;;;;ACA9R,qcAAqc,kBAAkB,iMAAiM,cAAc,uMAAuM,iBAAiB,mMAAmM,eAAe,oJAAoJ,2BAA2B,sP;;;;;;;;;;;;;;;;;;;;;ACAlsC;AACA;AACF;AAEL;AAEtD;IAAA;IAIA,CAAC;IAHC,+BAAM,GAAN,UAAO,IAAgB,EAAE,OAAiB;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IACH,qBAAC;AAAD,CAAC;;AAQD;IANA;QAOE,UAAK,GAAG,UAAU,CAAC;QACnB,qBAAgB,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IAU9D,CAAC;IALC,0CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAU,YAAY,CAAC,CAAC;QAChE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC,CAAC,+BAA+B;IAC7E,CAAC;IAPwB;QAAxB,+DAAS,CAAC,wEAAY,CAAC;wEAAY,wEAAY;8DAAC;IAJtC,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,qJAA+C;;SAEhD,CAAC;QACD,sEAAa,CAAC,UAAU,EAAE,2BAA2B,EAAE,iCAAiC,CAAC;OAC7E,uBAAuB,CAYnC;IAAD,8BAAC;CAAA;AAZmC;AAqBpC,IAAM,YAAY,GAAc;IAC9B,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE;IACnE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE;IAC/D,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE;IAChE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE;IACpE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE;IAChE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE;IACnE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;IACjE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;IAC9D,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;IAChE,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;IACpE,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE;IACxE,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;IACnE,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE;IACpE,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;IAClE,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE;CAClE,CAAC;;;;;;;;;;;;ACvDF,kCAAkC,sBAAsB,KAAK,mDAAmD,+Z;;;;;;;;;;;ACAhH,g7BAAg7B,cAAc,yWAAyW,sBAAsB,kXAAkX,yBAAyB,yYAAyY,6BAA6B,8IAA8I,2BAA2B,8B;;;;;;;;;;;;;;;;;;;;;;ACAruE;AACI;AACC;AACY;AAEnE;IAAA;IAGA,CAAC;IAAD,cAAC;AAAD,CAAC;;AAED;IAAA;IAIA,CAAC;IAAD,iBAAC;AAAD,CAAC;;AAED,IAAM,eAAe,GAAiB;IACpC,EAAC,IAAI,EAAE,WAAW,EAAE,mBAAmB,EAAE,KAAK,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAC,EAAC;IAC7F,EAAC,IAAI,EAAE,YAAY,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,EAAC,EAAC;IAChG,EAAC,IAAI,EAAE,YAAY,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAC,EAAC;IAC1F,EAAC,IAAI,EAAE,WAAW,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,EAAC,EAAC;IAC/F,EAAC,IAAI,EAAE,YAAY,EAAE,mBAAmB,EAAE,KAAK,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAC,EAAC;CAClG,CAAC;AAQF;IAQE;QAFA,qBAAgB,GAAa,CAAC,MAAM,EAAE,aAAa,EAAE,gBAAgB,EAAE,qBAAqB,CAAC,CAAC;IAG9F,CAAC;IAED,2CAAQ,GAAR;QACE,4EAA4E;QAC5E,IAAI,CAAC,YAAY,GAAG,IAAI,UAAU,EAAE,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,mBAAmB,GAAG,KAAK,CAAC,CAAC,oFAAoF;QACnI,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,eAAe,CAAC,CAAC;QAE1D,+EAA+E;QAC/E,6DAA6D;QAC7D,IAAI,CAAC,UAAU,GAAG,+DAAc,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,eAAe,GAAG,EAAC,cAAc,EAAE,EAAC,UAAU,EAAE,+DAAc,CAAC,MAAM,EAAE,aAAa,EAAE,IAAI,EAAC,EAAC,CAAC;IACpG,CAAC;IAtBU,wBAAwB;QANpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,wJAAgD;;SAEjD,CAAC;QACD,sEAAa,CAAC,QAAQ,EAAE,4BAA4B,EAAE,2BAA2B,CAAC;;OACtE,wBAAwB,CAuBpC;IAAD,+BAAC;CAAA;AAvBoC;;;;;;;;;;;;AC9BrC,wCAAwC,wBAAwB,KAAK,wBAAwB,sBAAsB,KAAK,mDAAmD,+f;;;;;;;;;;;ACA3K,ohBAAohB,cAAc,yWAAyW,sBAAsB,kXAAkX,yBAAyB,yYAAyY,6BAA6B,8IAA8I,2BAA2B,8B;;;;;;;;;;;;;;;;;;;;;;ACAz0D;AACI;AACC;AACL;AAElD;IAAA;IAGA,CAAC;IAAD,cAAC;AAAD,CAAC;;AAED;IAAA;IAIA,CAAC;IAAD,iBAAC;AAAD,CAAC;;AAED,IAAM,eAAe,GAAiB;IACpC,EAAC,IAAI,EAAE,WAAW,EAAE,mBAAmB,EAAE,KAAK,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAC,EAAC;IAC7F,EAAC,IAAI,EAAE,YAAY,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,EAAC,EAAC;IAChG,EAAC,IAAI,EAAE,YAAY,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAC,EAAC;IAC1F,EAAC,IAAI,EAAE,WAAW,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,EAAC,EAAC;IAC/F,EAAC,IAAI,EAAE,YAAY,EAAE,mBAAmB,EAAE,KAAK,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAC,EAAC;CAClG,CAAC;AAQF;IAKE;QAFA,qBAAgB,GAAa,CAAC,MAAM,EAAE,aAAa,EAAE,gBAAgB,EAAE,qBAAqB,CAAC,CAAC;IAG9F,CAAC;IAED,wCAAQ,GAAR;QACE,4EAA4E;QAC5E,IAAI,CAAC,YAAY,GAAG,IAAI,UAAU,EAAE,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,mBAAmB,GAAG,KAAK,CAAC,CAAC,oFAAoF;QACnI,IAAI,CAAC,UAAU,GAAG,+DAAc,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,eAAe,CAAC,CAAC;IAC5D,CAAC;IAfU,qBAAqB;QANjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,+IAA6C;;SAE9C,CAAC;QACD,sEAAa,CAAC,QAAQ,EAAE,yBAAyB,EAAE,eAAe,CAAC;;OACvD,qBAAqB,CAgBjC;IAAD,4BAAC;CAAA;AAhBiC;;;;;;;;;;;;AC9BlC,kCAAkC,gCAAgC,yBAAyB,wBAAwB,mBAAmB,iBAAiB,6EAA6E,KAAK,iBAAiB,0BAA0B,uBAAuB,uBAAuB,yBAAyB,uBAAuB,KAAK,iBAAiB,uBAAuB,wBAAwB,KAAK,+BAA+B,wBAAwB,2BAA2B,OAAO,qBAAqB,4BAA4B,0BAA0B,OAAO,qBAAqB,yBAAyB,OAAO,KAAK,mDAAmD,u9C;;;;;;;;;;;ACAptB,gmB;;;;;;;;;;;;;;;;;;;;ACCoD;AACF;AACI;AACH;AAOnD;IAAuC,2EAAa;IAElD,2BAAY,eAAgC;eAC1C,kBAAM,eAAe,CAAC;IACvB,CAAC;IAEF,oCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,iEAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IARU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,uHAAwC;;SAEzC,CAAC;+EAG6B,gEAAe;OAFjC,iBAAiB,CAU7B;IAAD,wBAAC;CAAA,CAVsC,6DAAa,GAUnD;AAV6B;;;;;;;;;;;;ACX9B,kCAAkC,gCAAgC,yBAAyB,wBAAwB,mBAAmB,iBAAiB,6EAA6E,KAAK,iBAAiB,0BAA0B,uBAAuB,uBAAuB,yBAAyB,uBAAuB,KAAK,iBAAiB,uBAAuB,wBAAwB,KAAK,+BAA+B,wBAAwB,2BAA2B,OAAO,qBAAqB,4BAA4B,0BAA0B,OAAO,qBAAqB,yBAAyB,OAAO,KAAK,mDAAmD,+8C;;;;;;;;;;;ACAptB,onB;;;;;;;;;;;;;;;;;;;;ACAwD;AACN;AACA;AACC;AAMnD;IAAqC,yEAAa;IAEhD,yBAAY,eAAgC;eAC1C,kBAAM,eAAe,CAAC;IACxB,CAAC;IAED,kCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,iEAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IATU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,iHAAsC;;SAEvC,CAAC;+EAG6B,gEAAe;OAFjC,eAAe,CAW3B;IAAD,sBAAC;CAAA,CAXoC,6DAAa,GAWjD;AAX2B;;;;;;;;;;;;;ACT5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXpC,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CdkTableModule } from '@angular/cdk/table';\nimport { saveAs } from 'file-saver';\nimport { __extends } from 'tslib';\nimport { utils, write } from 'xlsx';\nimport { NgModule, EventEmitter, Input, Output, Injectable, Injector, defineInjectable, inject, INJECTOR } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CdkTableExporterModule = /** @class */ (function () {\r\n    function CdkTableExporterModule() {\r\n    }\r\n    CdkTableExporterModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [],\r\n                    imports: [\r\n                        CdkTableModule\r\n                    ],\r\n                    exports: []\r\n                },] }\r\n    ];\r\n    return CdkTableExporterModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar ExportType = {\r\n    XLS: 'xls',\r\n    XLSX: 'xlsx',\r\n    CSV: 'csv',\r\n    TXT: 'txt',\r\n    JSON: 'json',\r\n    OTHER: 'other',\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar Mime = /** @class */ (function () {\r\n    function Mime(extension, contentTypeHeader) {\r\n        this.extension = extension;\r\n        this.contentTypeHeader = contentTypeHeader;\r\n    }\r\n    return Mime;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MAT_TABLE_EXPORTER = 'mat-table-exporter';\r\n/** @type {?} */\r\nvar TYPE_ARRAY = 'array';\r\n/** @type {?} */\r\nvar CHAR_SET_UTF = ';charset=utf-';\r\n/** @type {?} */\r\nvar CHAR_SET_UTF_8 = CHAR_SET_UTF + '8';\r\n/** @type {?} */\r\nvar CONTENT_TYPE_TEXT = ExportType.TXT + '/';\r\n/** @type {?} */\r\nvar CONTENT_TYPE_APPLICATION = 'application/';\r\n/** @type {?} */\r\nvar CONTENT_TYPE_EXCEL = CONTENT_TYPE_APPLICATION + 'octet-stream';\r\n/** @type {?} */\r\nvar DOT = '.';\r\n/** @type {?} */\r\nvar EXTENSION_XLS = DOT + ExportType.XLS;\r\n/** @type {?} */\r\nvar EXTENSION_XLSX = DOT + ExportType.XLSX;\r\n/** @type {?} */\r\nvar EXTENSION_CSV = DOT + ExportType.CSV;\r\n/** @type {?} */\r\nvar EXTENSION_JSON = DOT + ExportType.JSON;\r\n/** @type {?} */\r\nvar EXTENSION_TEXT = DOT + ExportType.TXT;\r\n/** @type {?} */\r\nvar MIME_EXCEL_XLS = new Mime(EXTENSION_XLS, CONTENT_TYPE_EXCEL + CHAR_SET_UTF_8);\r\n/** @type {?} */\r\nvar MIME_EXCEL_XLSX = new Mime(EXTENSION_XLSX, CONTENT_TYPE_EXCEL + CHAR_SET_UTF_8);\r\n/** @type {?} */\r\nvar MIME_JSON = new Mime(EXTENSION_JSON, CONTENT_TYPE_TEXT + JSON + CHAR_SET_UTF_8);\r\n/** @type {?} */\r\nvar MIME_TXT = new Mime(EXTENSION_TEXT, CONTENT_TYPE_TEXT + ExportType.TXT + CHAR_SET_UTF_8);\r\n/** @type {?} */\r\nvar MIME_CSV = new Mime(EXTENSION_CSV, CONTENT_TYPE_TEXT + ExportType.CSV + CHAR_SET_UTF_8);\r\n/** @type {?} */\r\nvar REF = '!ref';\r\n/** @type {?} */\r\nvar XLS_REGEX = DOT + '*\\.' + ExportType.XLS + '$';\r\n/** @type {?} */\r\nvar RETURN = '\\n';\r\n/** @type {?} */\r\nvar TAB = '\\t';\r\n/** @type {?} */\r\nvar XLSX_COLS = '!cols';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FileUtil = /** @class */ (function () {\r\n    function FileUtil() {\r\n    }\r\n    /**\r\n     * @param {?} content\r\n     * @param {?} mime\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    FileUtil.save = /**\r\n     * @param {?} content\r\n     * @param {?} mime\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    function (content, mime, options) {\r\n        /** @type {?} */\r\n        var blob = new Blob([content], { type: mime.contentTypeHeader });\r\n        /** @type {?} */\r\n        var fileName = MAT_TABLE_EXPORTER;\r\n        if (options && options.fileName) {\r\n            fileName = options.fileName;\r\n        }\r\n        saveAs(blob, fileName + mime.extension);\r\n    };\r\n    /**\r\n     * @param {?} fileName\r\n     * @return {?}\r\n     */\r\n    FileUtil.isXls = /**\r\n     * @param {?} fileName\r\n     * @return {?}\r\n     */\r\n    function (fileName) {\r\n        return fileName.toLowerCase().match(XLS_REGEX) != null;\r\n    };\r\n    /**\r\n     * @param {?=} fileName\r\n     * @return {?}\r\n     */\r\n    FileUtil.identifyExportType = /**\r\n     * @param {?=} fileName\r\n     * @return {?}\r\n     */\r\n    function (fileName) {\r\n        if (fileName && FileUtil.isXls(fileName)) {\r\n            return ExportType.XLS;\r\n        }\r\n        else {\r\n            return ExportType.XLSX;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    FileUtil.removeExtension = /**\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    function (options) {\r\n        options.fileName = options.fileName.split(DOT)[0];\r\n    };\r\n    return FileUtil;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Exporter class for CdkTable. Abstracts the varying behaviors among different CdkTable implementations.\r\n * @abstract\r\n */\r\n// @Directive()\r\nvar CdkTableExporter = /** @class */ (function () {\r\n    function CdkTableExporter(renderer, serviceLocator, dataExtractor, table, viewContainerRef) {\r\n        this.renderer = renderer;\r\n        this.serviceLocator = serviceLocator;\r\n        this.dataExtractor = dataExtractor;\r\n        this.table = table;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.exportCompleted = new EventEmitter();\r\n        this.exportStarted = new EventEmitter();\r\n        this.initCdkTable();\r\n    }\r\n    Object.defineProperty(CdkTableExporter.prototype, \"cdkTable\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._cdkTable;\r\n        },\r\n        /**\r\n         * @deprecated\r\n         */\r\n        set: /**\r\n         * @deprecated\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            console.warn('cdkTable input is deprecated!');\r\n            this._cdkTable = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CdkTableExporter.prototype, \"exporterButton\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._exporterButton;\r\n        },\r\n        /**\r\n         * @deprecated\r\n         */\r\n        set: /**\r\n         * @deprecated\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            console.warn('exporterButton input is deprecated!');\r\n            this._exporterButton = value;\r\n            this.setButtonListener();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CdkTableExporter.prototype, \"fileName\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._fileName;\r\n        },\r\n        /**\r\n         * @deprecated\r\n         */\r\n        set: /**\r\n         * @deprecated\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            console.warn('fileName input is deprecated!');\r\n            this._fileName = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CdkTableExporter.prototype, \"sheetName\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._sheetName;\r\n        },\r\n        /**\r\n         * @deprecated\r\n         */\r\n        set: /**\r\n         * @deprecated\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            console.warn('sheetName input is deprecated!');\r\n            this._sheetName = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.initCdkTable = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // tslint:disable-next-line:no-string-literal\r\n        /** @type {?} */\r\n        var table = this.viewContainerRef['_data'].componentView.component;\r\n        if (table) {\r\n            this._cdkTable = table;\r\n        }\r\n        else if (this.table) {\r\n            this._cdkTable = this.table;\r\n        }\r\n        else {\r\n            throw new Error('Unsupported Angular version');\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.setButtonListener = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this._exporterButton) {\r\n            this.renderer.listen(this._exporterButton._elementRef.nativeElement, 'click', (/**\r\n             * @param {?} evt\r\n             * @return {?}\r\n             */\r\n            function (evt) {\r\n                /** @type {?} */\r\n                var options = (/** @type {?} */ ({ fileName: _this._fileName, sheet: _this._sheetName }));\r\n                _this.exportTable(FileUtil.identifyExportType(_this._fileName), options); // this is to support deprecated way of exporting\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * Triggers page event chain thus extracting and exporting all the rows in nativetables in pages\r\n     */\r\n    /**\r\n     * Triggers page event chain thus extracting and exporting all the rows in nativetables in pages\r\n     * @param {?=} exportType\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.exportTable = /**\r\n     * Triggers page event chain thus extracting and exporting all the rows in nativetables in pages\r\n     * @param {?=} exportType\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    function (exportType, options) {\r\n        this.loadExporter(exportType);\r\n        this._options = options;\r\n        this.exportStarted.emit();\r\n        this._isIterating = true;\r\n        this._isExporting = true;\r\n        this._data = new Array();\r\n        this.enableExportButton(false);\r\n        this.extractTableHeader();\r\n        try {\r\n            this.exportWithPagination();\r\n        }\r\n        catch (notPaginated) {\r\n            this.exportSinglePage();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} exportType\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.loadExporter = /**\r\n     * @private\r\n     * @param {?} exportType\r\n     * @return {?}\r\n     */\r\n    function (exportType) {\r\n        if (exportType === ExportType.OTHER.valueOf()) {\r\n            this._exporterService = this.exporter;\r\n        }\r\n        else {\r\n            this._exporterService = this.serviceLocator.getService(exportType);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.exportWithPagination = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._initialPageIndex = this.getCurrentPageIndex();\r\n        this.initPageHandler();\r\n        this.goToPage(0);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.exportSinglePage = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.extractDataOnCurrentPage();\r\n        this.extractTableFooter();\r\n        this.exportExtractedData();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.extractDataOnCurrentPage = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._data = this._data.concat(this.dataExtractor.extractRows(this._cdkTable, this.hiddenColumns));\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.initPageHandler = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (!this._subscription) {\r\n            this._subscription = this.getPageChangeObservable().subscribe((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                setTimeout((/**\r\n                 * @return {?}\r\n                 */\r\n                function () {\r\n                    if (_this._isIterating) {\r\n                        _this.extractDataOnCurrentPage();\r\n                        if (_this.hasNextPage()) {\r\n                            _this.nextPage();\r\n                        }\r\n                        else {\r\n                            _this._isIterating = false;\r\n                            _this.goToPage(_this._initialPageIndex);\r\n                        }\r\n                    }\r\n                    else if (_this._isExporting) {\r\n                        _this._isExporting = false;\r\n                        _this.extractTableFooter();\r\n                        _this.exportExtractedData();\r\n                    }\r\n                }));\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.exportExtractedData = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._exporterService.export(this._data, this._options);\r\n        this._data = new Array();\r\n        this.enableExportButton(true);\r\n        this.exportCompleted.emit();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} outlet\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.extractSpecialRow = /**\r\n     * @private\r\n     * @param {?} outlet\r\n     * @return {?}\r\n     */\r\n    function (outlet) {\r\n        /** @type {?} */\r\n        var row = this.dataExtractor.extractRow(this._cdkTable, this.hiddenColumns, outlet);\r\n        if (row) {\r\n            this._data.push(row);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.extractTableHeader = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.extractSpecialRow(this._cdkTable._headerRowOutlet);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.extractTableFooter = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.extractSpecialRow(this._cdkTable._footerRowOutlet);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.hasNextPage = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.getCurrentPageIndex() < this.getPageCount() - 1) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.nextPage = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.goToPage(this.getCurrentPageIndex() + 1);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    CdkTableExporter.prototype.enableExportButton = /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (this._exporterButton) {\r\n            this.renderer.setProperty(this._exporterButton._elementRef.nativeElement, 'disabled', value ? null : 'true');\r\n        }\r\n    };\r\n    CdkTableExporter.propDecorators = {\r\n        hiddenColumns: [{ type: Input }],\r\n        exporter: [{ type: Input }],\r\n        exportCompleted: [{ type: Output }],\r\n        exportStarted: [{ type: Output }],\r\n        cdkTable: [{ type: Input }],\r\n        exporterButton: [{ type: Input }],\r\n        fileName: [{ type: Input }],\r\n        sheetName: [{ type: Input }]\r\n    };\r\n    return CdkTableExporter;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @abstract\r\n * @template T\r\n */\r\nvar  /**\r\n * @abstract\r\n * @template T\r\n */\r\nFileExporter = /** @class */ (function () {\r\n    function FileExporter() {\r\n    }\r\n    /**\r\n     * @param {?} rows\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    FileExporter.prototype.export = /**\r\n     * @param {?} rows\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    function (rows, options) {\r\n        if (!rows) {\r\n            throw new Error('Empty json array is provided, rows parameter is mandatory!');\r\n        }\r\n        /** @type {?} */\r\n        var content = this.createContent(rows, options);\r\n        /** @type {?} */\r\n        var mimeType = this.getMimeType();\r\n        FileUtil.save(content, mimeType, options);\r\n    };\r\n    return FileExporter;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar JsonExporterService = /** @class */ (function (_super) {\r\n    __extends(JsonExporterService, _super);\r\n    function JsonExporterService() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @param {?} rows\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    JsonExporterService.prototype.createContent = /**\r\n     * @param {?} rows\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    function (rows, options) {\r\n        return JSON.stringify(rows);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    JsonExporterService.prototype.getMimeType = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return MIME_JSON;\r\n    };\r\n    JsonExporterService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    JsonExporterService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ JsonExporterService.ngInjectableDef = defineInjectable({ factory: function JsonExporterService_Factory() { return new JsonExporterService(); }, token: JsonExporterService, providedIn: \"root\" });\r\n    return JsonExporterService;\r\n}(FileExporter));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar TxtExporterService = /** @class */ (function (_super) {\r\n    __extends(TxtExporterService, _super);\r\n    function TxtExporterService() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @param {?} rows\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    TxtExporterService.prototype.createContent = /**\r\n     * @param {?} rows\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    function (rows, options) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var content = '';\r\n        rows.forEach((/**\r\n         * @param {?} element\r\n         * @return {?}\r\n         */\r\n        function (element) {\r\n            content += Object.values(element).join(_this.getDelimiter(options)) + RETURN;\r\n        }));\r\n        return content;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TxtExporterService.prototype.getMimeType = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return MIME_TXT;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    TxtExporterService.prototype.getDelimiter = /**\r\n     * @private\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    function (options) {\r\n        if (options && options.delimiter) {\r\n            return options.delimiter;\r\n        }\r\n        else {\r\n            return TAB;\r\n        }\r\n    };\r\n    TxtExporterService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    TxtExporterService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ TxtExporterService.ngInjectableDef = defineInjectable({ factory: function TxtExporterService_Factory() { return new TxtExporterService(); }, token: TxtExporterService, providedIn: \"root\" });\r\n    return TxtExporterService;\r\n}(FileExporter));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * An angular service class that is used to create files out of json object arrays.\r\n * @abstract\r\n * @template T\r\n */\r\nvar  /**\r\n * An angular service class that is used to create files out of json object arrays.\r\n * @abstract\r\n * @template T\r\n */\r\nWorksheetExporter = /** @class */ (function (_super) {\r\n    __extends(WorksheetExporter, _super);\r\n    function WorksheetExporter() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @param {?} rows\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    WorksheetExporter.prototype.createContent = /**\r\n     * @param {?} rows\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    function (rows, options) {\r\n        /** @type {?} */\r\n        var workSheet = utils.json_to_sheet(rows, {\r\n            skipHeader: true // we don't want to see object properties as our headers\r\n        });\r\n        return this.workSheetToContent(workSheet, options);\r\n    };\r\n    return WorksheetExporter;\r\n}(FileExporter));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar XlsExporterService = /** @class */ (function (_super) {\r\n    __extends(XlsExporterService, _super);\r\n    function XlsExporterService() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @param {?} worksheet\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    XlsExporterService.prototype.workSheetToContent = /**\r\n     * @param {?} worksheet\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    function (worksheet, options) {\r\n        if (options === void 0) { options = (/** @type {?} */ ({})); }\r\n        /** @type {?} */\r\n        var workBook = utils.book_new();\r\n        if (options.columnWidths) {\r\n            worksheet[XLSX_COLS] = this.convertToWch(options.columnWidths);\r\n        }\r\n        this.correctTypes(options);\r\n        utils.book_append_sheet(workBook, worksheet, options.sheet);\r\n        return write(workBook, options);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XlsExporterService.prototype.getMimeType = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return MIME_EXCEL_XLS;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    XlsExporterService.prototype.correctTypes = /**\r\n     * @private\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    function (options) {\r\n        if (!options.type) {\r\n            options.type = TYPE_ARRAY;\r\n        }\r\n        ((/** @type {?} */ (options))).bookType = this.getMimeType().extension.replace('.', ''); // sheetjs requires bookingType for excel format\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} columnWidths\r\n     * @return {?}\r\n     */\r\n    XlsExporterService.prototype.convertToWch = /**\r\n     * @private\r\n     * @param {?} columnWidths\r\n     * @return {?}\r\n     */\r\n    function (columnWidths) {\r\n        return columnWidths.map((/**\r\n         * @param {?} width\r\n         * @return {?}\r\n         */\r\n        function (width) { return ({ wch: width }); }));\r\n    };\r\n    XlsExporterService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    XlsExporterService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ XlsExporterService.ngInjectableDef = defineInjectable({ factory: function XlsExporterService_Factory() { return new XlsExporterService(); }, token: XlsExporterService, providedIn: \"root\" });\r\n    return XlsExporterService;\r\n}(WorksheetExporter));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar XlsxExporterService = /** @class */ (function (_super) {\r\n    __extends(XlsxExporterService, _super);\r\n    function XlsxExporterService() {\r\n        return _super.call(this) || this;\r\n    }\r\n    // override\r\n    // override\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XlsxExporterService.prototype.getMimeType = \r\n    // override\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return MIME_EXCEL_XLSX;\r\n    };\r\n    XlsxExporterService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    XlsxExporterService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ XlsxExporterService.ngInjectableDef = defineInjectable({ factory: function XlsxExporterService_Factory() { return new XlsxExporterService(); }, token: XlsxExporterService, providedIn: \"root\" });\r\n    return XlsxExporterService;\r\n}(XlsExporterService));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CsvExporterService = /** @class */ (function (_super) {\r\n    __extends(CsvExporterService, _super);\r\n    function CsvExporterService() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @param {?} worksheet\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    CsvExporterService.prototype.workSheetToContent = /**\r\n     * @param {?} worksheet\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    function (worksheet, options) {\r\n        return utils.sheet_to_csv(worksheet);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CsvExporterService.prototype.getMimeType = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return MIME_CSV;\r\n    };\r\n    CsvExporterService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    CsvExporterService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ CsvExporterService.ngInjectableDef = defineInjectable({ factory: function CsvExporterService_Factory() { return new CsvExporterService(); }, token: CsvExporterService, providedIn: \"root\" });\r\n    return CsvExporterService;\r\n}(WorksheetExporter));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ServiceLocatorService = /** @class */ (function () {\r\n    function ServiceLocatorService(injector) {\r\n        this.injector = injector;\r\n    }\r\n    /**\r\n     * @param {?} exportType\r\n     * @return {?}\r\n     */\r\n    ServiceLocatorService.prototype.getService = /**\r\n     * @param {?} exportType\r\n     * @return {?}\r\n     */\r\n    function (exportType) {\r\n        switch (exportType) {\r\n            case ExportType.XLS.valueOf():\r\n                return this.injector.get(XlsExporterService);\r\n            case ExportType.XLSX.valueOf():\r\n                return this.injector.get(XlsxExporterService);\r\n            case ExportType.JSON.valueOf():\r\n                return this.injector.get(JsonExporterService);\r\n            case ExportType.TXT.valueOf():\r\n                return this.injector.get(TxtExporterService);\r\n            case ExportType.CSV.valueOf():\r\n                return this.injector.get(CsvExporterService);\r\n            case ExportType.OTHER.valueOf():\r\n                return null;\r\n            default:\r\n                return this.injector.get(XlsxExporterService);\r\n        }\r\n    };\r\n    ServiceLocatorService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ServiceLocatorService.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    /** @nocollapse */ ServiceLocatorService.ngInjectableDef = defineInjectable({ factory: function ServiceLocatorService_Factory() { return new ServiceLocatorService(inject(INJECTOR)); }, token: ServiceLocatorService, providedIn: \"root\" });\r\n    return ServiceLocatorService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DataExtractorService = /** @class */ (function () {\r\n    function DataExtractorService() {\r\n    }\r\n    /**\r\n     * @param {?} cdkTable\r\n     * @param {?} hiddenColumns\r\n     * @return {?}\r\n     */\r\n    DataExtractorService.prototype.extractRows = /**\r\n     * @param {?} cdkTable\r\n     * @param {?} hiddenColumns\r\n     * @return {?}\r\n     */\r\n    function (cdkTable, hiddenColumns) {\r\n        return this.getRowsAsJsonArray(cdkTable, hiddenColumns, cdkTable._rowOutlet);\r\n    };\r\n    /**\r\n     * @param {?} cdkTable\r\n     * @param {?} hiddenColumns\r\n     * @param {?} outlet\r\n     * @return {?}\r\n     */\r\n    DataExtractorService.prototype.extractRow = /**\r\n     * @param {?} cdkTable\r\n     * @param {?} hiddenColumns\r\n     * @param {?} outlet\r\n     * @return {?}\r\n     */\r\n    function (cdkTable, hiddenColumns, outlet) {\r\n        return this.getRowsAsJsonArray(cdkTable, hiddenColumns, outlet)[0];\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} cdkTable\r\n     * @param {?} hiddenColumns\r\n     * @param {?} outlet\r\n     * @return {?}\r\n     */\r\n    DataExtractorService.prototype.getRowsAsJsonArray = /**\r\n     * @private\r\n     * @param {?} cdkTable\r\n     * @param {?} hiddenColumns\r\n     * @param {?} outlet\r\n     * @return {?}\r\n     */\r\n    function (cdkTable, hiddenColumns, outlet) {\r\n        /** @type {?} */\r\n        var renderedRows = this.getRenderedRows(cdkTable, outlet);\r\n        return this.convertToJsonArray(hiddenColumns, renderedRows);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} cdkTable\r\n     * @param {?} outlet\r\n     * @return {?}\r\n     */\r\n    DataExtractorService.prototype.getRenderedRows = /**\r\n     * @private\r\n     * @param {?} cdkTable\r\n     * @param {?} outlet\r\n     * @return {?}\r\n     */\r\n    function (cdkTable, outlet) {\r\n        return (/** @type {?} */ (cdkTable._getRenderedRows(outlet)));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} hiddenColumns\r\n     * @param {?} rows\r\n     * @return {?}\r\n     */\r\n    DataExtractorService.prototype.convertToJsonArray = /**\r\n     * @private\r\n     * @param {?} hiddenColumns\r\n     * @param {?} rows\r\n     * @return {?}\r\n     */\r\n    function (hiddenColumns, rows) {\r\n        /** @type {?} */\r\n        var result = new Array();\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (var i = 0; i < rows.length; i++) {\r\n            /** @type {?} */\r\n            var row = this.convertRow(hiddenColumns, rows[i]);\r\n            result.push(this.createExcelItem(row));\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} hiddenColumns\r\n     * @param {?} row\r\n     * @return {?}\r\n     */\r\n    DataExtractorService.prototype.convertRow = /**\r\n     * @private\r\n     * @param {?} hiddenColumns\r\n     * @param {?} row\r\n     * @return {?}\r\n     */\r\n    function (hiddenColumns, row) {\r\n        /** @type {?} */\r\n        var result = new Array();\r\n        /** @type {?} */\r\n        var cells = row.children;\r\n        for (var i = 0; i < cells.length; i++) {\r\n            if (!this.shouldHide(hiddenColumns, i)) {\r\n                /** @type {?} */\r\n                var element = cells.item(i).innerText;\r\n                result.push(element);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} hiddenColumns\r\n     * @param {?} columnIndex\r\n     * @return {?}\r\n     */\r\n    DataExtractorService.prototype.shouldHide = /**\r\n     * @private\r\n     * @param {?} hiddenColumns\r\n     * @param {?} columnIndex\r\n     * @return {?}\r\n     */\r\n    function (hiddenColumns, columnIndex) {\r\n        if (hiddenColumns && hiddenColumns.includes(columnIndex)) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} row\r\n     * @return {?}\r\n     */\r\n    DataExtractorService.prototype.createExcelItem = /**\r\n     * @private\r\n     * @param {?} row\r\n     * @return {?}\r\n     */\r\n    function (row) {\r\n        return Object.assign({}, row);\r\n    };\r\n    DataExtractorService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    DataExtractorService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ DataExtractorService.ngInjectableDef = defineInjectable({ factory: function DataExtractorService_Factory() { return new DataExtractorService(); }, token: DataExtractorService, providedIn: \"root\" });\r\n    return DataExtractorService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { CdkTableExporter, FileExporter, JsonExporterService, TxtExporterService, XlsExporterService, WorksheetExporter, XlsxExporterService, CsvExporterService, ExportType, ServiceLocatorService, DataExtractorService, Mime, FileUtil, CdkTableExporterModule, MAT_TABLE_EXPORTER, TYPE_ARRAY, CHAR_SET_UTF, CHAR_SET_UTF_8, CONTENT_TYPE_TEXT, CONTENT_TYPE_APPLICATION, CONTENT_TYPE_EXCEL, DOT, EXTENSION_XLS, EXTENSION_XLSX, EXTENSION_CSV, EXTENSION_JSON, EXTENSION_TEXT, MIME_EXCEL_XLS, MIME_EXCEL_XLSX, MIME_JSON, MIME_TXT, MIME_CSV, REF, XLS_REGEX, RETURN, TAB, XLSX_COLS };\n\n//# sourceMappingURL=cdk-table-exporter.js.map","import { __extends } from 'tslib';\nimport { Directive, Host, Renderer2, Self, Optional, ViewContainerRef, NgModule } from '@angular/core';\nimport { MatTable, MatTableModule } from '@angular/material';\nimport { CdkTableExporter, DataExtractorService, ServiceLocatorService, CdkTableExporterModule } from 'cdk-table-exporter';\nexport { CdkTableExporter, FileExporter, JsonExporterService, TxtExporterService, XlsExporterService, WorksheetExporter, XlsxExporterService, CsvExporterService, ExportType, ServiceLocatorService, DataExtractorService, Mime, FileUtil, CdkTableExporterModule, MAT_TABLE_EXPORTER, TYPE_ARRAY, CHAR_SET_UTF, CHAR_SET_UTF_8, CONTENT_TYPE_TEXT, CONTENT_TYPE_APPLICATION, CONTENT_TYPE_EXCEL, DOT, EXTENSION_XLS, EXTENSION_XLSX, EXTENSION_CSV, EXTENSION_JSON, EXTENSION_TEXT, MIME_EXCEL_XLS, MIME_EXCEL_XLSX, MIME_JSON, MIME_TXT, MIME_CSV, REF, XLS_REGEX, RETURN, TAB, XLSX_COLS } from 'cdk-table-exporter';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar MatTableExporterDirective = /** @class */ (function (_super) {\r\n    __extends(MatTableExporterDirective, _super);\r\n    function MatTableExporterDirective(renderer, serviceLocator, dataExtractor, table, viewContainerRef) {\r\n        return _super.call(this, renderer, serviceLocator, dataExtractor, table, viewContainerRef) || this;\r\n    }\r\n    /**\r\n     * Overriding ngAfterViewInit of TableExporter\r\n     */\r\n    /**\r\n     * Overriding ngAfterViewInit of TableExporter\r\n     * @return {?}\r\n     */\r\n    MatTableExporterDirective.prototype.ngAfterViewInit = /**\r\n     * Overriding ngAfterViewInit of TableExporter\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.exportStarted.subscribe((/**\r\n         * @param {?} _\r\n         * @return {?}\r\n         */\r\n        function (_) {\r\n            _this.enablePaginator(false);\r\n        }));\r\n        this.exportCompleted.subscribe((/**\r\n         * @param {?} _\r\n         * @return {?}\r\n         */\r\n        function (_) {\r\n            _this.enablePaginator(true);\r\n        }));\r\n    };\r\n    /**\r\n     * MatTable implementation of getPageCount\r\n     * @override\r\n     */\r\n    /**\r\n     * MatTable implementation of getPageCount\r\n     * @override\r\n     * @return {?}\r\n     */\r\n    MatTableExporterDirective.prototype.getPageCount = /**\r\n     * MatTable implementation of getPageCount\r\n     * @override\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.getPaginator().getNumberOfPages();\r\n    };\r\n    /**\r\n     * MatTable implementation of getCurrentPageIndex\r\n     * @override\r\n     */\r\n    /**\r\n     * MatTable implementation of getCurrentPageIndex\r\n     * @override\r\n     * @return {?}\r\n     */\r\n    MatTableExporterDirective.prototype.getCurrentPageIndex = /**\r\n     * MatTable implementation of getCurrentPageIndex\r\n     * @override\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.getPaginator().pageIndex;\r\n    };\r\n    /**\r\n     * MatTable implementation of goToPage\r\n     * @override\r\n     */\r\n    /**\r\n     * MatTable implementation of goToPage\r\n     * @override\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    MatTableExporterDirective.prototype.goToPage = /**\r\n     * MatTable implementation of goToPage\r\n     * @override\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        this.getPaginator().pageIndex = index;\r\n        this.getPaginator()._changePageSize(this.getPaginator().pageSize);\r\n    };\r\n    /**\r\n     * MatTable implementation of getPageChangeObservable\r\n     * @override\r\n     */\r\n    /**\r\n     * MatTable implementation of getPageChangeObservable\r\n     * @override\r\n     * @return {?}\r\n     */\r\n    MatTableExporterDirective.prototype.getPageChangeObservable = /**\r\n     * MatTable implementation of getPageChangeObservable\r\n     * @override\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.getPaginator().page;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    MatTableExporterDirective.prototype.getPaginator = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ((/** @type {?} */ (this.cdkTable.dataSource))).paginator;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    MatTableExporterDirective.prototype.enablePaginator = /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (this.getPaginator()) {\r\n            this.getPaginator().disabled = !value;\r\n            this.getPaginator()._changePageSize(this.getPaginator().pageSize);\r\n        }\r\n    };\r\n    MatTableExporterDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[ngxMatTableExporter], [matTableExporter]',\r\n                    // renamed selector but kept old version for backwards compat.\r\n                    exportAs: 'matTableExporter'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    MatTableExporterDirective.ctorParameters = function () { return [\r\n        { type: Renderer2 },\r\n        { type: ServiceLocatorService },\r\n        { type: DataExtractorService },\r\n        { type: MatTable, decorators: [{ type: Host }, { type: Self }, { type: Optional }] },\r\n        { type: ViewContainerRef }\r\n    ]; };\r\n    return MatTableExporterDirective;\r\n}(CdkTableExporter));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar MatTableExporterModule = /** @class */ (function () {\r\n    function MatTableExporterModule() {\r\n    }\r\n    MatTableExporterModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [MatTableExporterDirective],\r\n                    imports: [\r\n                        MatTableModule,\r\n                        CdkTableExporterModule\r\n                    ],\r\n                    exports: [MatTableExporterDirective]\r\n                },] }\r\n    ];\r\n    return MatTableExporterModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { MatTableExporterDirective, MatTableExporterModule };\n\n//# sourceMappingURL=mat-table-exporter.js.map","import { MatTable, MatTableModule } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { __extends, __values } from 'tslib';\nimport { Injectable, NgModule, Directive, Input, ViewContainerRef, Host, Self, Optional, defineInjectable, inject } from '@angular/core';\nimport { isEqual, difference, flatten, isString, cloneDeep, isNil, every, isEmpty, isArray, isBoolean, isNumber } from 'lodash';\nimport { isFunction } from 'util';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar MatTableFilter = {\r\n    EQUALS: 'EQUALS',\r\n    ANYWHERE: 'ANYWHERE',\r\n    STARTS_WITH: 'STARTS_WITH',\r\n    ENDS_WITH: 'ENDS_WITH',\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @abstract\r\n * @template T\r\n */\r\nvar  /**\r\n * @abstract\r\n * @template T\r\n */\r\nFilterPredicate = /** @class */ (function () {\r\n    function FilterPredicate() {\r\n    }\r\n    /**\r\n     * @param {?} itemPair\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    FilterPredicate.prototype.executeCondition = /**\r\n     * @param {?} itemPair\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    function (itemPair, options) {\r\n        this.handleLetterCasing(itemPair, options.caseSensitive);\r\n        switch (options.filterType) {\r\n            case MatTableFilter.EQUALS:\r\n                return this.equals(itemPair);\r\n            case MatTableFilter.ANYWHERE:\r\n                return this.anywhere(itemPair);\r\n            case MatTableFilter.STARTS_WITH:\r\n                return this.startsWith(itemPair);\r\n            case MatTableFilter.ENDS_WITH:\r\n                return this.endsWith(itemPair);\r\n            default:\r\n                return true;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} itemPair\r\n     * @param {?} caseSensitive\r\n     * @return {?}\r\n     */\r\n    FilterPredicate.prototype.handleLetterCasing = /**\r\n     * @private\r\n     * @param {?} itemPair\r\n     * @param {?} caseSensitive\r\n     * @return {?}\r\n     */\r\n    function (itemPair, caseSensitive) {\r\n        if (!caseSensitive) {\r\n            this.transformAllLowerCase(itemPair);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} object\r\n     * @return {?}\r\n     */\r\n    FilterPredicate.prototype.transformAllLowerCase = /**\r\n     * @private\r\n     * @param {?} object\r\n     * @return {?}\r\n     */\r\n    function (object) {\r\n        // tslint:disable-next-line:forin\r\n        for (var key in object) {\r\n            /** @type {?} */\r\n            var value = object[key];\r\n            if (isString(value)) {\r\n                object[key] = value.toLowerCase();\r\n            }\r\n            else {\r\n                this.transformAllLowerCase(value);\r\n            }\r\n        }\r\n    };\r\n    return FilterPredicate;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ArrayPredicateService = /** @class */ (function (_super) {\r\n    __extends(ArrayPredicateService, _super);\r\n    function ArrayPredicateService() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    ArrayPredicateService.warn = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.warn(ArrayPredicateService.UNSUPPORTED_OPERATION_WARNING);\r\n        console.warn(ArrayPredicateService.SUGGESTION_WARNING);\r\n    };\r\n    /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    ArrayPredicateService.prototype.equals = /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    function (itemPair) {\r\n        return isEqual(itemPair.example.sort(), itemPair.item.sort());\r\n    };\r\n    /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    ArrayPredicateService.prototype.anywhere = /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    function (itemPair) {\r\n        return this.isSubset(itemPair.example, itemPair.item);\r\n    };\r\n    /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    ArrayPredicateService.prototype.startsWith = /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    function (itemPair) {\r\n        ArrayPredicateService.warn();\r\n        return this.anywhere(itemPair);\r\n    };\r\n    /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    ArrayPredicateService.prototype.endsWith = /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    function (itemPair) {\r\n        ArrayPredicateService.warn();\r\n        return this.anywhere(itemPair);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} example\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    ArrayPredicateService.prototype.isSubset = /**\r\n     * @private\r\n     * @param {?} example\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (example, item) {\r\n        return !difference(flatten(example), flatten(item)).length;\r\n    };\r\n    // tslint:disable-next-line:max-line-length\r\n    ArrayPredicateService.UNSUPPORTED_OPERATION_WARNING = 'This filterType is unsupported for array filtering. FilterType.ANYWHERE is executed instead!';\r\n    ArrayPredicateService.SUGGESTION_WARNING = 'You can set a custom predicate for the array property through PropertyOptions!';\r\n    ArrayPredicateService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ArrayPredicateService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ ArrayPredicateService.ngInjectableDef = defineInjectable({ factory: function ArrayPredicateService_Factory() { return new ArrayPredicateService(); }, token: ArrayPredicateService, providedIn: \"root\" });\r\n    return ArrayPredicateService;\r\n}(FilterPredicate));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AlphaNumericPredicateService = /** @class */ (function (_super) {\r\n    __extends(AlphaNumericPredicateService, _super);\r\n    function AlphaNumericPredicateService() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    AlphaNumericPredicateService.prototype.equals = /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    function (itemPair) {\r\n        return itemPair.example === itemPair.item;\r\n    };\r\n    /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    AlphaNumericPredicateService.prototype.anywhere = /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    function (itemPair) {\r\n        return itemPair.item.includes(itemPair.example);\r\n    };\r\n    /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    AlphaNumericPredicateService.prototype.startsWith = /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    function (itemPair) {\r\n        return itemPair.item.startsWith(itemPair.example);\r\n    };\r\n    /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    AlphaNumericPredicateService.prototype.endsWith = /**\r\n     * @param {?} itemPair\r\n     * @return {?}\r\n     */\r\n    function (itemPair) {\r\n        return itemPair.item.endsWith(itemPair.example);\r\n    };\r\n    AlphaNumericPredicateService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    AlphaNumericPredicateService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ AlphaNumericPredicateService.ngInjectableDef = defineInjectable({ factory: function AlphaNumericPredicateService_Factory() { return new AlphaNumericPredicateService(); }, token: AlphaNumericPredicateService, providedIn: \"root\" });\r\n    return AlphaNumericPredicateService;\r\n}(FilterPredicate));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar MatTableFilterService = /** @class */ (function () {\r\n    function MatTableFilterService(_alphaNumericService, _arrayService) {\r\n        this._alphaNumericService = _alphaNumericService;\r\n        this._arrayService = _arrayService;\r\n    }\r\n    /**\r\n     * @param {?} itemPair\r\n     * @param {?} propertyOptions\r\n     * @param {?} commonOptions\r\n     * @param {?=} propertyName\r\n     * @return {?}\r\n     */\r\n    MatTableFilterService.prototype.filterPredicate = /**\r\n     * @param {?} itemPair\r\n     * @param {?} propertyOptions\r\n     * @param {?} commonOptions\r\n     * @param {?=} propertyName\r\n     * @return {?}\r\n     */\r\n    function (itemPair, propertyOptions, commonOptions, propertyName) {\r\n        var e_1, _a;\r\n        // tslint:disable-next-line:forin\r\n        /** @type {?} */\r\n        var exampleKeys = Object.keys(itemPair.example);\r\n        try {\r\n            for (var exampleKeys_1 = __values(exampleKeys), exampleKeys_1_1 = exampleKeys_1.next(); !exampleKeys_1_1.done; exampleKeys_1_1 = exampleKeys_1.next()) {\r\n                var key = exampleKeys_1_1.value;\r\n                /** @type {?} */\r\n                var exampleValue = cloneDeep(itemPair.example[key]);\r\n                if (isNil(exampleValue) || every(exampleValue, isEmpty) && typeof exampleValue !== 'boolean') {\r\n                    // if example entity's property is undefined/null/empty then it means the caller wants all the data\r\n                    continue;\r\n                }\r\n                if (itemPair.item.hasOwnProperty(key)) {\r\n                    // if example entity has additional columns then search fails\r\n                    /** @type {?} */\r\n                    var itemValue = cloneDeep(itemPair.item[key]);\r\n                    /** @type {?} */\r\n                    var nextPropertyName = this.getNextPropertyName(propertyName, key);\r\n                    /** @type {?} */\r\n                    var options = this.finalizeOptionsForProperty(commonOptions, propertyOptions, nextPropertyName);\r\n                    if (isFunction(options)) { // if user defined predicate is present for property\r\n                        // if user defined predicate is present for property\r\n                        /** @type {?} */\r\n                        var customPredicate = (/** @type {?} */ (options));\r\n                        if (!customPredicate(itemValue)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        /** @type {?} */\r\n                        var columnOptions = (/** @type {?} */ (options));\r\n                        if (this.isAlphaNumeric(itemValue)) {\r\n                            /** @type {?} */\r\n                            var valuePair = { item: itemValue.toString(), example: exampleValue };\r\n                            if (!this._alphaNumericService.executeCondition(valuePair, columnOptions)) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (isArray(itemValue)) {\r\n                            /** @type {?} */\r\n                            var valuePair = { item: itemValue, example: exampleValue };\r\n                            if (!this._arrayService.executeCondition(valuePair, columnOptions)) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else if (isBoolean(itemValue)) {\r\n                            if (itemValue !== exampleValue) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            /** @type {?} */\r\n                            var valuePair = { item: itemValue, example: exampleValue };\r\n                            if (!this.filterPredicate(valuePair, propertyOptions, options, nextPropertyName)) {\r\n                                // if one of the inner properties returns true, this shouldnt affect the whole item's filtering\r\n                                // however if it returns false then the item must not be in the list\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (exampleKeys_1_1 && !exampleKeys_1_1.done && (_a = exampleKeys_1.return)) _a.call(exampleKeys_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} commonOptions\r\n     * @param {?} propertyOptions\r\n     * @param {?} propertyName\r\n     * @return {?}\r\n     */\r\n    MatTableFilterService.prototype.finalizeOptionsForProperty = /**\r\n     * @private\r\n     * @param {?} commonOptions\r\n     * @param {?} propertyOptions\r\n     * @param {?} propertyName\r\n     * @return {?}\r\n     */\r\n    function (commonOptions, propertyOptions, propertyName) {\r\n        if (propertyOptions && propertyOptions.hasOwnProperty(propertyName)) {\r\n            return propertyOptions[propertyName];\r\n        }\r\n        else {\r\n            return commonOptions;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} propertyName\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    MatTableFilterService.prototype.getNextPropertyName = /**\r\n     * @private\r\n     * @param {?} propertyName\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (propertyName, key) {\r\n        return propertyName ? (propertyName + '.' + key) : key;\r\n    };\r\n    /**\r\n     * @param {?} oldEntity\r\n     * @param {?} newEntity\r\n     * @return {?}\r\n     */\r\n    MatTableFilterService.prototype.isChanged = /**\r\n     * @param {?} oldEntity\r\n     * @param {?} newEntity\r\n     * @return {?}\r\n     */\r\n    function (oldEntity, newEntity) {\r\n        return !isEqual(this.toPlainJson(oldEntity), this.toPlainJson(newEntity));\r\n    };\r\n    /**\r\n     * @param {?} object\r\n     * @return {?}\r\n     */\r\n    MatTableFilterService.prototype.toPlainJson = /**\r\n     * @param {?} object\r\n     * @return {?}\r\n     */\r\n    function (object) {\r\n        if (object) {\r\n            return JSON.parse(JSON.stringify(object));\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    MatTableFilterService.prototype.isAlphaNumeric = /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        return isString(value) || isNumber(value);\r\n    };\r\n    MatTableFilterService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    MatTableFilterService.ctorParameters = function () { return [\r\n        { type: AlphaNumericPredicateService },\r\n        { type: ArrayPredicateService }\r\n    ]; };\r\n    /** @nocollapse */ MatTableFilterService.ngInjectableDef = defineInjectable({ factory: function MatTableFilterService_Factory() { return new MatTableFilterService(inject(AlphaNumericPredicateService), inject(ArrayPredicateService)); }, token: MatTableFilterService, providedIn: \"root\" });\r\n    return MatTableFilterService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar MatTableFilterDirective = /** @class */ (function () {\r\n    function MatTableFilterDirective(_filterService, _injectedTable, _viewContainerRef) {\r\n        this._filterService = _filterService;\r\n        this._injectedTable = _injectedTable;\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this.debounceTime = 400;\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n        this.caseSensitive = false;\r\n        this.initCdkTable();\r\n        this.initDebounceSubject();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatTableFilterDirective.prototype.ngDoCheck = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._filterService.isChanged(this._oldExampleEntity, this.exampleEntity)) {\r\n            this._oldExampleEntity = this._filterService.toPlainJson(this.exampleEntity);\r\n            this._exampleEntitySubject.next(undefined);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    MatTableFilterDirective.prototype.initCdkTable = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // tslint:disable-next-line:no-string-literal\r\n        /** @type {?} */\r\n        var table = this._viewContainerRef['_data'].componentView.component;\r\n        if (table) {\r\n            this._table = table;\r\n        }\r\n        else if (this._injectedTable) {\r\n            this._table = this._injectedTable;\r\n        }\r\n        else {\r\n            throw new Error('Unsupported Angular version!');\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    MatTableFilterDirective.prototype.initDebounceSubject = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this._exampleEntitySubject = new BehaviorSubject(null);\r\n        this._exampleEntitySubject.pipe(debounceTime(this.debounceTime))\r\n            .subscribe((/**\r\n         * @param {?} _\r\n         * @return {?}\r\n         */\r\n        function (_) {\r\n            _this.updateFilterPredicate();\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    MatTableFilterDirective.prototype.updateFilterPredicate = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var matDataSource = this.getMatDataSource();\r\n        if (matDataSource) {\r\n            matDataSource.filterPredicate = this.getFilterPredicate();\r\n            matDataSource.filter = (/** @type {?} */ (this.exampleEntity));\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    MatTableFilterDirective.prototype.getFilterPredicate = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this.customPredicate) {\r\n            return this.customPredicate;\r\n        }\r\n        else {\r\n            return (/**\r\n             * @param {?} item\r\n             * @return {?}\r\n             */\r\n            function (item) {\r\n                return _this._filterService.filterPredicate({ example: _this.exampleEntity, item: item }, _this.propertyOptions, { filterType: _this.filterType, caseSensitive: _this.caseSensitive });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    MatTableFilterDirective.prototype.getMatDataSource = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var matTable = (/** @type {?} */ (this._table));\r\n        return ((/** @type {?} */ (matTable.dataSource)));\r\n    };\r\n    MatTableFilterDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[matTableFilter]',\r\n                    exportAs: 'matTableFilter'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    MatTableFilterDirective.ctorParameters = function () { return [\r\n        { type: MatTableFilterService },\r\n        { type: MatTable, decorators: [{ type: Host }, { type: Self }, { type: Optional }] },\r\n        { type: ViewContainerRef }\r\n    ]; };\r\n    MatTableFilterDirective.propDecorators = {\r\n        exampleEntity: [{ type: Input }],\r\n        debounceTime: [{ type: Input }],\r\n        filterType: [{ type: Input }],\r\n        caseSensitive: [{ type: Input }],\r\n        customPredicate: [{ type: Input }],\r\n        propertyOptions: [{ type: Input }]\r\n    };\r\n    return MatTableFilterDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar MatTableFilterModule = /** @class */ (function () {\r\n    function MatTableFilterModule() {\r\n    }\r\n    MatTableFilterModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [MatTableFilterDirective],\r\n                    imports: [\r\n                        MatTableModule\r\n                    ],\r\n                    exports: [MatTableFilterDirective]\r\n                },] }\r\n    ];\r\n    return MatTableFilterModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { MatTableFilterService, MatTableFilter, MatTableFilterDirective, MatTableFilterModule, AlphaNumericPredicateService as ɵa, ArrayPredicateService as ɵc, FilterPredicate as ɵb };\n\n//# sourceMappingURL=mat-table-filter.js.map","module.exports = \"\\r\\n.docs-header-background {\\r\\n  background: #3f51b5;\\r\\n}\\r\\n\\r\\n.docs-header-logo {\\r\\n  width: 45px;\\r\\n  height: 45px;\\r\\n}\\r\\n\\r\\n.docs-header-headline {\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\na {\\r\\n   text-decoration:none;\\r\\n}\\r\\n\\r\\n.docs-header-start {\\r\\n  color: #3f51b5;\\r\\n}\\r\\n\\r\\n.docs-header-background {\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.docs-header-section {\\r\\n  text-align: center;\\r\\n  padding-top: 25px;\\r\\n}\\r\\n\\r\\n.docs-footer {\\r\\n  padding: 12px;\\r\\n  font-size: 12px;\\r\\n  margin-top: 40px;\\r\\n  background: #3f51b5;\\r\\n  color: #fff;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.docs-footer-list {\\r\\n  align-items: center;\\r\\n  display: flex;\\r\\n  flex-flow: row wrap;\\r\\n  padding: 8px;\\r\\n}\\r\\n\\r\\n.docs-footer-logo {\\r\\n  flex: 1;\\r\\n}\\r\\n\\r\\n.footer-logo {\\r\\n  padding: 12px;\\r\\n  font-size: 12px;\\r\\n  margin-top: 40px;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n  font-size: 56px;\\r\\n  font-weight: 300;\\r\\n  line-height: 56px;\\r\\n  margin: 15px 5px;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  font-size: 18px;\\r\\n  font-weight: 300;\\r\\n  line-height: 28px;\\r\\n  margin: 15px 0 25px 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n  * Rules for when the device is detected to be a small screen.\\r\\n  */\\r\\n\\r\\n@media (max-width: 720px) {\\r\\n  .docs-header-section {\\r\\n    padding-top: 15px;\\r\\n  }\\r\\n}\\r\\n\\r\\n::ng-deep .docs-tabs > .mat-tab-header {\\r\\n  background-color: #3f51b5 !important;\\r\\n}\\r\\n\\r\\n::ng-deep .docs-tabs > .mat-tab-header > .mat-tab-label-container > .mat-tab-list > .mat-ink-bar {\\r\\n  background-color: #fff !important;\\r\\n  height: 4px;\\r\\n}\\r\\n\\r\\n::ng-deep .docs-tabs > .mat-tab-header > .mat-tab-label-container > .mat-tab-list > .mat-tab-labels > .mat-tab-label > .mat-tab-label-content {\\r\\n  color: #fff !important;\\r\\n}\\r\\n\\r\\n::ng-deep .docs-tabs > .mat-tab-header > .mat-tab-label-container > .mat-tab-list > .mat-tab-labels > .mat-tab-label-active {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtHQUNHLG9CQUFvQjtBQUN2Qjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsT0FBTztBQUNUOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEI7O0FBR0E7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixxQkFBcUI7QUFDdkI7O0FBR0E7O0dBRUc7O0FBQ0g7RUFDRTtJQUNFLGlCQUFpQjtFQUNuQjtBQUNGOztBQUdBO0VBQ0Usb0NBQW9DO0FBQ3RDOztBQUVBO0VBQ0UsaUNBQWlDO0VBQ2pDLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLFVBQVU7QUFDWiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5kb2NzLWhlYWRlci1iYWNrZ3JvdW5kIHtcclxuICBiYWNrZ3JvdW5kOiAjM2Y1MWI1O1xyXG59XHJcblxyXG4uZG9jcy1oZWFkZXItbG9nbyB7XHJcbiAgd2lkdGg6IDQ1cHg7XHJcbiAgaGVpZ2h0OiA0NXB4O1xyXG59XHJcblxyXG4uZG9jcy1oZWFkZXItaGVhZGxpbmUge1xyXG4gIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG5hIHtcclxuICAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XHJcbn1cclxuXHJcbi5kb2NzLWhlYWRlci1zdGFydCB7XHJcbiAgY29sb3I6ICMzZjUxYjU7XHJcbn1cclxuXHJcbi5kb2NzLWhlYWRlci1iYWNrZ3JvdW5kIHtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4uZG9jcy1oZWFkZXItc2VjdGlvbiB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmctdG9wOiAyNXB4O1xyXG59XHJcblxyXG4uZG9jcy1mb290ZXIge1xyXG4gIHBhZGRpbmc6IDEycHg7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG4gIG1hcmdpbi10b3A6IDQwcHg7XHJcbiAgYmFja2dyb3VuZDogIzNmNTFiNTtcclxuICBjb2xvcjogI2ZmZjtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmRvY3MtZm9vdGVyLWxpc3Qge1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xyXG4gIHBhZGRpbmc6IDhweDtcclxufVxyXG5cclxuLmRvY3MtZm9vdGVyLWxvZ28ge1xyXG4gIGZsZXg6IDE7XHJcbn1cclxuXHJcbi5mb290ZXItbG9nbyB7XHJcbiAgcGFkZGluZzogMTJweDtcclxuICBmb250LXNpemU6IDEycHg7XHJcbiAgbWFyZ2luLXRvcDogNDBweDtcclxufVxyXG5cclxuXHJcbmgxIHtcclxuICBmb250LXNpemU6IDU2cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICBsaW5lLWhlaWdodDogNTZweDtcclxuICBtYXJnaW46IDE1cHggNXB4O1xyXG59XHJcblxyXG5oMiB7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XHJcbiAgbWFyZ2luOiAxNXB4IDAgMjVweCAwO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAgKiBSdWxlcyBmb3Igd2hlbiB0aGUgZGV2aWNlIGlzIGRldGVjdGVkIHRvIGJlIGEgc21hbGwgc2NyZWVuLlxyXG4gICovXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA3MjBweCkge1xyXG4gIC5kb2NzLWhlYWRlci1zZWN0aW9uIHtcclxuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xyXG4gIH1cclxufVxyXG5cclxuXHJcbjo6bmctZGVlcCAuZG9jcy10YWJzID4gLm1hdC10YWItaGVhZGVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y1MWI1ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuZG9jcy10YWJzID4gLm1hdC10YWItaGVhZGVyID4gLm1hdC10YWItbGFiZWwtY29udGFpbmVyID4gLm1hdC10YWItbGlzdCA+IC5tYXQtaW5rLWJhciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xyXG4gIGhlaWdodDogNHB4O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLmRvY3MtdGFicyA+IC5tYXQtdGFiLWhlYWRlciA+IC5tYXQtdGFiLWxhYmVsLWNvbnRhaW5lciA+IC5tYXQtdGFiLWxpc3QgPiAubWF0LXRhYi1sYWJlbHMgPiAubWF0LXRhYi1sYWJlbCA+IC5tYXQtdGFiLWxhYmVsLWNvbnRlbnQge1xyXG4gIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuZG9jcy10YWJzID4gLm1hdC10YWItaGVhZGVyID4gLm1hdC10YWItbGFiZWwtY29udGFpbmVyID4gLm1hdC10YWItbGlzdCA+IC5tYXQtdGFiLWxhYmVscyA+IC5tYXQtdGFiLWxhYmVsLWFjdGl2ZSB7XHJcbiAgb3BhY2l0eTogMTtcclxufVxyXG4iXX0= */\"","module.exports = \"<header class=\\\"docs-header-background\\\">\\n  <div class=\\\"docs-header-section\\\">\\n      <a fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" href=\\\"https://github.com/HalitTalha/mat-table-extensions\\\" target=\\\"_blank\\\">\\n        <img class=\\\"docs-header-logo\\\" src=\\\"assets/images/github.png\\\">\\n        <a class=\\\"docs-header-headline\\\">/HalitTalha</a>\\n      </a>\\n    <div class=\\\"docs-header-headline\\\">\\n      <h1 class=\\\"mat-h1\\\">mat-table-extensions</h1>\\n      <h2> Extended features for Angular Material Tables</h2>\\n    </div>\\n  </div>\\n</header>\\n  <mat-tab-group class=\\\"docs-tabs\\\" mat-align-tabs=\\\"center\\\">\\n      <mat-tab label=\\\"Exporter\\\">\\n        <app-exporter></app-exporter>\\n      </mat-tab>\\n      <mat-tab label=\\\"Filter\\\">\\n        <app-filter></app-filter>\\n      </mat-tab>\\n  </mat-tab-group>\\n<footer class=\\\"docs-footer\\\">\\n  <div class=\\\"docs-footer-list\\\">\\n    <div class=\\\"docs-footer-logo\\\">\\n      <div class=\\\"footer-logo\\\">\\n\\n      </div>\\n    </div>\\n  </div>\\n  <notifier-container></notifier-container>\\n</footer>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'mat-table-extensions';\n}\n","\nimport { MatTableFilterModule } from 'mat-table-filter';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\n// tslint:disable-next-line:max-line-length\nimport { MatAutocompleteModule, MatBadgeModule, MatBottomSheetModule, MatButtonModule, MatButtonToggleModule, MatCardModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatDialogModule, MatDividerModule, MatExpansionModule, MatGridListModule, MatIconModule, MatInputModule, MatListModule, MatMenuModule, MatNativeDateModule, MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule, MatRadioModule, MatRippleModule, MatSelectModule, MatSidenavModule, MatSliderModule, MatSlideToggleModule, MatSnackBarModule, MatSortModule, MatStepperModule, MatTableModule, MatTabsModule, MatToolbarModule, MatTooltipModule, MatTreeModule } from '@angular/material';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableExporterModule } from 'mat-table-exporter';\n\nimport { ExporterComponent } from './components/exporter/exporter.component';\nimport { FilterComponent } from './components/filter/filter.component';\nimport { MarkdownModule, MarkedOptions } from 'ngx-markdown';\nimport { AppComponent } from './app.component';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ExampleViewerComponent } from './components/example-viewer/example-viewer.component';\nimport { SimpleFilterComponent } from './components/examples/simple-filter/simple-filter.component';\nimport { CustomColumnFilterComponent } from './components/examples/custom-column-filter/custom-column-filter.component';\nimport { ArrayFilterComponent } from './components/examples/array-filter/array-filter.component';\nimport { PropertyOptionsComponent } from './components/examples/property-options/property-options.component';\nimport { BriefExporterComponent } from './components/examples/brief-exporter/brief-exporter.component';\nimport { CustomExporterComponent } from './components/examples/custom-exporter/custom-exporter.component';\nimport { NotifierModule } from 'angular-notifier';\n\nexport function markedOptions(): MarkedOptions {\n\n  return {\n    gfm: false,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    smartLists: true,\n    smartypants: false,\n  };\n}\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExporterComponent,\n    FilterComponent,\n    ExampleViewerComponent,\n    ArrayFilterComponent,\n    CustomColumnFilterComponent,\n    SimpleFilterComponent,\n    PropertyOptionsComponent,\n    BriefExporterComponent,\n    CustomExporterComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    FormsModule,\n    PortalModule,\n    MarkdownModule.forRoot({\n      loader: HttpClient,\n      markedOptions: {\n        provide: MarkedOptions,\n        useFactory: markedOptions,\n      },\n    }),\n    BrowserAnimationsModule,\n    NotifierModule.withConfig({\n      theme: 'material',\n      behaviour: {\n        autoHide: 2000,\n        showDismissButton: false\n      },\n      position: {\n       horizontal: {\n         position: 'right'\n       }\n      }\n    }),\n    FlexLayoutModule,\n    MatTableFilterModule,\n   MatTableExporterModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    ArrayFilterComponent,\n    BriefExporterComponent,\n    CustomColumnFilterComponent,\n    CustomExporterComponent,\n    SimpleFilterComponent,\n    PropertyOptionsComponent,\n\n  ]\n})\nexport class AppModule { }\n","export const showCaseExamples: Map<string, Array<any>> = new Map();\r\n\r\nexport function AddToShowCase(categoryName: string, fileName: string, description: string) {\r\n  return (type: any) => {\r\n    type.prototype.fileName = fileName;\r\n    type.prototype.description = description;\r\n    const categoryArray = showCaseExamples.get(categoryName);\r\n    if (!categoryArray) {\r\n      const examples = new Array<any>();\r\n      examples.push(type);\r\n      showCaseExamples.set(categoryName, examples);\r\n    } else {\r\n      categoryArray.push(type);\r\n    }\r\n    return type;\r\n  };\r\n}\r\n","import { NotifierService } from 'angular-notifier';\r\n\r\nexport class BaseComponent {\r\n\r\n  examples;\r\n\r\n  constructor(protected notifierService: NotifierService) {\r\n  }\r\n\r\n  onCopyClipboard() {\r\n    this.notifierService.notify(\r\n      'success',\r\n      'Copied!',\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \":host {\\r\\n  display: block;\\r\\n  padding: 20px 0;\\r\\n}\\r\\n\\r\\n\\r\\n.docs-example-viewer-title {\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  padding: 8px 20px;\\r\\n  color: rgba(0,0,0,.54);\\r\\n  background: rgba(0,0,0,.03);\\r\\n}\\r\\n\\r\\n\\r\\n.docs-example-viewer-title-spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n\\r\\n.docs-example-source-copy {\\r\\n  position: absolute;\\r\\n  top: 8px;\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n\\r\\n.docs-example-source {\\r\\n  padding: 0 30px 10px 30px;\\r\\n  min-height: 150px;\\r\\n}\\r\\n\\r\\n\\r\\n.docs-example-viewer-body {\\r\\n  padding: 30px;\\r\\n}\\r\\n\\r\\n\\r\\n.docs-example-viewer-wrapper {\\r\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12);\\r\\n  margin: 4px;\\r\\n}\\r\\n\\r\\n\\r\\n.docs-example-source-copy {\\r\\n  right: 8px;\\r\\n}\\r\\n\\r\\n\\r\\n.docs-example-source {\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n\\r\\n::ng-deep .docs-source-tabs > .mat-tab-header > .mat-tab-label-container > .mat-tab-list > .mat-tab-labels {\\r\\n  justify-content: flex-start !important;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9leGFtcGxlLXZpZXdlci9leGFtcGxlLXZpZXdlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGVBQWU7QUFDakI7OztBQUdBO0VBQ0UscUJBQXFCO0VBQ3JCLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLGlCQUFpQjtFQUNqQixzQkFBc0I7RUFDdEIsMkJBQTJCO0FBQzdCOzs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7OztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixhQUFhO0FBQ2Y7OztBQUdBO0VBQ0UseUJBQXlCO0VBQ3pCLGlCQUFpQjtBQUNuQjs7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7OztBQUVBO0VBQ0Usc0VBQXNFO0VBQ3RFLFdBQVc7QUFDYjs7O0FBR0E7RUFDRSxVQUFVO0FBQ1o7OztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7O0FBRUE7RUFDRSxzQ0FBc0M7QUFDeEMiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2V4YW1wbGUtdmlld2VyL2V4YW1wbGUtdmlld2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgcGFkZGluZzogMjBweCAwO1xyXG59XHJcblxyXG5cclxuLmRvY3MtZXhhbXBsZS12aWV3ZXItdGl0bGUge1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgcGFkZGluZzogOHB4IDIwcHg7XHJcbiAgY29sb3I6IHJnYmEoMCwwLDAsLjU0KTtcclxuICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLC4wMyk7XHJcbn1cclxuXHJcbi5kb2NzLWV4YW1wbGUtdmlld2VyLXRpdGxlLXNwYWNlciB7XHJcbiAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuXHJcbi5kb2NzLWV4YW1wbGUtc291cmNlLWNvcHkge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDhweDtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG5cclxuLmRvY3MtZXhhbXBsZS1zb3VyY2Uge1xyXG4gIHBhZGRpbmc6IDAgMzBweCAxMHB4IDMwcHg7XHJcbiAgbWluLWhlaWdodDogMTUwcHg7XHJcbn1cclxuXHJcbi5kb2NzLWV4YW1wbGUtdmlld2VyLWJvZHkge1xyXG4gIHBhZGRpbmc6IDMwcHg7XHJcbn1cclxuXHJcbi5kb2NzLWV4YW1wbGUtdmlld2VyLXdyYXBwZXIge1xyXG4gIGJveC1zaGFkb3c6IDAgMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMjQpLCAwIDAgMnB4IHJnYmEoMCwgMCwgMCwgMC4xMik7XHJcbiAgbWFyZ2luOiA0cHg7XHJcbn1cclxuXHJcblxyXG4uZG9jcy1leGFtcGxlLXNvdXJjZS1jb3B5IHtcclxuICByaWdodDogOHB4O1xyXG59XHJcblxyXG4uZG9jcy1leGFtcGxlLXNvdXJjZSB7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuZG9jcy1zb3VyY2UtdGFicyA+IC5tYXQtdGFiLWhlYWRlciA+IC5tYXQtdGFiLWxhYmVsLWNvbnRhaW5lciA+IC5tYXQtdGFiLWxpc3QgPiAubWF0LXRhYi1sYWJlbHMge1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4iXX0= */\"","module.exports = \"<div class=\\\"docs-example-viewer-wrapper\\\">\\r\\n    <div class=\\\"docs-example-viewer-title\\\">\\r\\n      <div class=\\\"docs-example-viewer-title-spacer\\\">{{description}}</div>\\r\\n\\r\\n      <button mat-icon-button type=\\\"button\\\" (click)=\\\"toggleSource()\\\"\\r\\n              [matTooltip]=\\\"'View source'\\\">\\r\\n        <mat-icon>\\r\\n          <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" fit=\\\"\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" focusable=\\\"false\\\">\\r\\n            <path fill=\\\"none\\\" d=\\\"M0 0h24v24H0V0z\\\"></path>\\r\\n            <path d=\\\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\\\"></path>\\r\\n          </svg>\\r\\n        </mat-icon>\\r\\n      </button>\\r\\n      <!-- <button mat-icon-button type=\\\"button\\\" [matTooltip]=\\\"'Edit in Stackblitz'\\\">\\r\\n        <mat-icon>\\r\\n          open_in_new\\r\\n        </mat-icon>\\r\\n      </button> -->\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"docs-example-viewer-source\\\" *ngIf=\\\"showSource\\\">\\r\\n      <mat-tab-group class=\\\"docs-source-tabs\\\">\\r\\n        <mat-tab label=\\\"HTML\\\">\\r\\n            <markdown [src]=\\\"htmlDoc\\\"></markdown>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"TS\\\">\\r\\n            <markdown [src]=\\\"tsDoc\\\"></markdown>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"CSS\\\">\\r\\n            <markdown [src]=\\\"cssDoc\\\"></markdown>\\r\\n          </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n    <mat-divider></mat-divider>\\r\\n    <div class=\\\"docs-example-viewer-body\\\">\\r\\n      <ng-template [cdkPortalOutlet]=\\\"example\\\"></ng-template>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ComponentPortal, ComponentType } from '@angular/cdk/portal';\n\n@Component({\n  selector: 'app-example-viewer',\n  templateUrl: './example-viewer.component.html',\n  styleUrls: ['./example-viewer.component.css']\n})\nexport class ExampleViewerComponent {\n\n  private static readonly ASSETS_ROOT: string = './assets/';\n  private static readonly SOURCES_PATH: string = 'example-sources/';\n\n  example: ComponentPortal<any>;\n  private fileName: string;\n  description: string;\n  stackBlitzLink: string;\n  @Input()\n  set exampleType(type: ComponentType<any>) {\n    this.example = new ComponentPortal(type);\n    this.fileName = type.prototype.fileName;\n    this.description = type.prototype.description;\n    // this.stackBlitzLink = type.prototype.stackBlitzLink;\n    this.htmlDoc = this.resolveFilePath('.html'); // Will be replaced with a more convinient webpack/bazel solution\n    this.tsDoc =  this.resolveFilePath('.js');\n    this.cssDoc =  this.resolveFilePath('.css');\n  }\n\n  showSource: boolean;\n  htmlDoc: string;\n  tsDoc: string;\n  cssDoc: string;\n\n  constructor() { }\n\n  toggleSource() {\n    this.showSource = !this.showSource;\n  }\n\n  private resolveFilePath(extension: string): string {\n    return ExampleViewerComponent.ASSETS_ROOT + ExampleViewerComponent.SOURCES_PATH +\n    this.fileName.replace('.component', '/') +\n    this.fileName + extension;\n  }\n\n}\n","module.exports = \"mat-form-field {\\r\\n  margin-top:15px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9leGFtcGxlcy9hcnJheS1maWx0ZXIvYXJyYXktZmlsdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9leGFtcGxlcy9hcnJheS1maWx0ZXIvYXJyYXktZmlsdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XHJcbiAgbWFyZ2luLXRvcDoxNXB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<p>Demonstrates filtering of an Array type column. Enter Size chips for filtering.</p>\\n\\n<mat-table matTableFilter [exampleEntity]=\\\"filterEntity\\\" [filterType]=\\\"filterType\\\" [dataSource]=\\\"dataSource\\\"\\n  class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"category\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <input matInput placeholder=\\\"Category\\\" [(ngModel)]=\\\"filterEntity.category\\\">\\n      </mat-form-field>\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.category}} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"brand\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <input matInput placeholder=\\\"Product Brand\\\" [(ngModel)]=\\\"filterEntity.brand\\\">\\n      </mat-form-field>\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.brand}} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"availableSizes\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n\\n      <mat-form-field class=\\\"example-chip-list\\\">\\n        <mat-chip-list #chipList aria-label=\\\"Fruit selection\\\">\\n          <mat-chip *ngFor=\\\"let size of filterEntity.availableSizes\\\" [selectable]=\\\"true\\\" [removable]=\\\"true\\\"\\n            (removed)=\\\"remove(size)\\\">\\n            {{size}}\\n            <mat-icon matChipRemove>cancel</mat-icon>\\n          </mat-chip>\\n          <input placeholder=\\\"Add Size\\\" [matChipInputFor]=\\\"chipList\\\"\\n            [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" [matChipInputAddOnBlur]=\\\"true\\\"\\n            (matChipInputTokenEnd)=\\\"add($event)\\\">\\n        </mat-chip-list>\\n      </mat-form-field>\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.availableSizes}} </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n\"","import { MatTableFilter } from 'mat-table-filter';\nimport { Component, OnInit } from '@angular/core';\nimport { AddToShowCase } from '../../add-to-showcase';\nimport { MatTableDataSource, MatChipInputEvent } from '@angular/material';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\nexport class Product {\n  category: string;\n  brand: string;\n  availableSizes: Array<string>;\n}\n\nconst PRODUCTS: Product[] = [\n  {category: 'T-Shirt', brand: 'X', availableSizes: ['S', 'M', 'L', 'XL']},\n  {category: 'T-Shirt', brand: 'Y', availableSizes: ['S', 'L', 'XL']},\n  {category: 'T-Shirt', brand: 'Z', availableSizes: ['XL']},\n  {category: 'Jean', brand: 'X', availableSizes: ['S', 'M', 'L', 'XL']},\n  {category: 'Jean', brand: 'Y', availableSizes: ['S', 'M']},\n  {category: 'Jean', brand: 'Z', availableSizes: ['S', 'M', 'L']},\n  {category: 'Jean', brand: 'B', availableSizes: ['S', 'M', 'L']},\n  {category: 'Jacket', brand: 'X', availableSizes: ['S', 'L', 'XL']},\n  {category: 'Jacket', brand: 'Z', availableSizes: ['S']},\n  {category: 'Pants', brand: 'X', availableSizes: ['S', 'M', 'L', 'XL']},\n  {category: 'Pants', brand: 'Y', availableSizes: ['L', 'XL']},\n  {category: 'Pants', brand: 'Z', availableSizes: ['S']},\n  {category: 'Hat', brand: 'X', availableSizes: ['S', 'M', 'L']},\n  {category: 'Skirt', brand: 'X', availableSizes: ['S', 'M', 'L', 'XL']},\n  {category: 'Skirt', brand: 'Y', availableSizes: ['S', 'M', 'L']}\n ];\n\n@Component({\n  selector: 'app-array-filter',\n  templateUrl: './array-filter.component.html',\n  styleUrls: ['./array-filter.component.css']\n})\n@AddToShowCase('filter', 'array-filter.component', 'Array Filter')\nexport class ArrayFilterComponent implements OnInit {\n  filterEntity: Product;\n  filterType: MatTableFilter;\n  displayedColumns: string[] = ['category', 'brand', 'availableSizes'];\n  dataSource;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.filterEntity.availableSizes.push(value.trim());\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  remove(size: string): void {\n    const index = this.filterEntity.availableSizes.indexOf(size);\n\n    if (index >= 0) {\n      this.filterEntity.availableSizes.splice(index, 1);\n    }\n  }\n\n  ngOnInit() {\n    this.filterEntity = new Product();\n    this.filterEntity.availableSizes = new Array<string>(); // DO NOT FORGET TO INIT THE ARRAY\n    this.filterType = MatTableFilter.ANYWHERE;\n    this.dataSource = new MatTableDataSource(PRODUCTS);\n  }\n}\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  max-height: 500px;\\r\\n  min-width: 300px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.mat-table {\\r\\n  overflow: auto;\\r\\n  max-height: 500px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9leGFtcGxlcy9icmllZi1leHBvcnRlci9icmllZi1leHBvcnRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2V4YW1wbGVzL2JyaWVmLWV4cG9ydGVyL2JyaWVmLWV4cG9ydGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBtYXgtaGVpZ2h0OiA1MDBweDtcclxuICBtaW4td2lkdGg6IDMwMHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5tYXQtdGFibGUge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gIG1heC1oZWlnaHQ6IDUwMHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<p>Briefly demonstrates all exporting functionalities of mat-table-exporter.</p>\\n\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <mat-table matTableExporter [dataSource]=\\\"dataSource\\\" #exporter=\\\"matTableExporter\\\" [hiddenColumns]=\\\"[0]\\\">\\n\\n    <ng-container matColumnDef=\\\"position\\\">\\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"surname\\\">\\n      <mat-header-cell *matHeaderCellDef> Surname </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.surname}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"birth\\\">\\n      <mat-header-cell *matHeaderCellDef> Birth </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.birth}} </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n<div>\\n  <button mat-raised-button (click)=\\\"exporter.exportTable('xlsx', {sheet: 'sheet_name', Props: {Author: 'Talha'}, columnWidths: [50, 5, 3]})\\\">Excel</button>\\n  <button mat-raised-button (click)=\\\"exporter.exportTable('csv')\\\">Csv</button>\\n  <button mat-raised-button (click)=\\\"exporter.exportTable('json')\\\">Json</button>\\n  <button mat-raised-button (click)=\\\"exporter.exportTable('txt')\\\">Txt</button>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AddToShowCase } from '../../add-to-showcase';\n\n@Component({\n  selector: 'app-brief-exporter',\n  templateUrl: './brief-exporter.component.html',\n  styleUrls: ['./brief-exporter.component.css']\n})\n@AddToShowCase('exporter', 'brief-exporter.component', 'Overall Exporting Example')\nexport class BriefExporterComponent implements OnInit {\n  title = 'mte-test';\n  displayedColumns = ['position', 'name', 'surname', 'birth'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource: MatTableDataSource<Element>;\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\n    this.dataSource.paginator = this.paginator;\n  }\n}\n\nexport interface Element {\n  name: string;\n  position: number;\n  surname: string;\n  birth: string;\n}\n\nconst ELEMENT_DATA: Element[] = [\n  {position: 1, name: 'Albert', surname: 'Einstein', birth: '1879'},\n  {position: 2, name: 'Marie', surname: 'Curie', birth: '1867'},\n  {position: 3, name: 'Enrico', surname: 'Fermi', birth: '1901'},\n  {position: 4, name: 'Dmitri', surname: 'Mendeleev', birth: '1834'},\n  {position: 5, name: 'Alfred', surname: 'Nobel', birth: '1833'},\n  {position: 6, name: 'Ernest', surname: 'Lawrence', birth: '1901'},\n  {position: 7, name: 'Glenn', surname: 'Seaborg', birth: '1912'},\n  {position: 8, name: 'Niels', surname: 'Bohr', birth: '1885'},\n  {position: 9, name: 'Lise', surname: 'Meitner', birth: '1878'},\n  {position: 10, name: 'Wilhelm', surname: 'Röntgen', birth: '1845'},\n  {position: 11, name: 'Nicolaus', surname: 'Copernicus', birth: '1473'},\n  {position: 12, name: 'Georgy', surname: 'Flyorov', birth: '1913'},\n  {position: 13, name: 'Yuri', surname: 'Oganessian', birth: '1933'},\n  {position: 14, name: 'Johan', surname: 'Gadolin', birth: '1760'},\n  {position: 15, name: 'Pierre', surname: 'Curie', birth: '1859'},\n];\n","module.exports = \"mat-form-field {\\r\\n  margin-top:15px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9leGFtcGxlcy9jdXN0b20tY29sdW1uLWZpbHRlci9jdXN0b20tY29sdW1uLWZpbHRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXhhbXBsZXMvY3VzdG9tLWNvbHVtbi1maWx0ZXIvY3VzdG9tLWNvbHVtbi1maWx0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcclxuICBtYXJnaW4tdG9wOjE1cHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<p>Demonstrates a custom filtering requirement where only some part of the string needs to be filtered.</p>\\n<p>Flight Route is filtered according to the custom filtering predicate provided with propertyOptions.</p>\\n<mat-table matTableFilter [exampleEntity]=\\\"filterEntity\\\" [propertyOptions]=\\\"propertyOptions\\\"\\n[filterType]=\\\"filterType\\\" [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <input matInput placeholder=\\\"Flight Route\\\" [(ngModel)]=\\\"filterEntity.name\\\">\\n      </mat-form-field>\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"journeyTime\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Journey Time\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.journeyTime}} </mat-cell>\\n  </ng-container>\\n\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AddToShowCase } from '../../add-to-showcase';\nimport { MatTableDataSource } from '@angular/material';\nimport { MatTableFilter } from 'mat-table-filter';\n\nexport class Route {\n  name: string;\n  journeyTime: string;\n}\n\nconst ROUTES: Route[] = [\n {name: 'FRA-IST-JFK', journeyTime: '10:00'},\n {name: 'MLE-IST-ESB', journeyTime: '10:30'},\n {name: 'IST-ESB-GZT', journeyTime: '01:30'},\n {name: 'IST-ESB-GZT', journeyTime: '01:30'},\n {name: 'JFK-SAW-AYT', journeyTime: '02:45'},\n {name: 'JFK-SAW-FRA', journeyTime: '02:45'},\n {name: 'JFK-SAW-FRA', journeyTime: '02:45'}\n];\n\n@Component({\n  selector: 'app-simple-filter',\n  templateUrl: './custom-column-filter.component.html',\n  styleUrls: ['./custom-column-filter.component.css']\n})\n@AddToShowCase('filter', 'custom-column-filter.component', 'Custom Property Predicate')\nexport class CustomColumnFilterComponent implements OnInit {\n  filterEntity: Route;\n  filterType: MatTableFilter;\n  displayedColumns: string[] = ['name', 'journeyTime'];\n  propertyOptions;\n  dataSource;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.filterEntity = new Route();\n    this.filterType = MatTableFilter.ANYWHERE;\n    this.dataSource = new MatTableDataSource(ROUTES);\n    this.propertyOptions = {name: (routeName: string) => { // Custom filtering for name property\n      return routeName.split('-')[1] === this.filterEntity.name; // filter for only the station in the middle\n    }};\n  }\n}\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  max-height: 500px;\\r\\n  min-width: 300px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.mat-table {\\r\\n  overflow: auto;\\r\\n  max-height: 500px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9leGFtcGxlcy9jdXN0b20tZXhwb3J0ZXIvY3VzdG9tLWV4cG9ydGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXhhbXBsZXMvY3VzdG9tLWV4cG9ydGVyL2N1c3RvbS1leHBvcnRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgbWF4LWhlaWdodDogNTAwcHg7XHJcbiAgbWluLXdpZHRoOiAzMDBweDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4ubWF0LXRhYmxlIHtcclxuICBvdmVyZmxvdzogYXV0bztcclxuICBtYXgtaGVpZ2h0OiA1MDBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<p>Demonstrates the use of a custom exporter implementation.</p>\\n\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <mat-table matTableExporter [dataSource]=\\\"dataSource\\\" [exporter]= \\\"customExporter\\\" #exportDirective=\\\"matTableExporter\\\" [hiddenColumns]=\\\"[0]\\\" >\\n\\n    <ng-container matColumnDef=\\\"position\\\">\\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"surname\\\">\\n      <mat-header-cell *matHeaderCellDef> Surname </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.surname}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"birth\\\">\\n      <mat-header-cell *matHeaderCellDef> Birth </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.birth}} </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n<div>\\n  <button mat-raised-button (click)=\\\"exportDirective.exportTable('other')\\\">Custom Export</button>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Exporter, Options } from 'mat-table-exporter';\nimport { AddToShowCase } from '../../add-to-showcase';\n\nexport class CustomExporter implements Exporter<Options> {\n  export(rows: Array<any>, options?: Options) {\n    console.log(rows);\n  }\n}\n\n@Component({\n  selector: 'app-custom-exporter',\n  templateUrl: './custom-exporter.component.html',\n  styleUrls: ['./custom-exporter.component.css']\n})\n@AddToShowCase('exporter', 'custom-exporter.component', 'Custom Exporting Implementation')\nexport class CustomExporterComponent implements OnInit {\n  title = 'mte-test';\n  displayedColumns = ['position', 'name', 'surname', 'birth'];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource: MatTableDataSource<Element>;\n  customExporter: CustomExporter;\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\n    this.dataSource.paginator = this.paginator;\n    this.customExporter = new CustomExporter(); // YOU CAN BENEFIT FROM DI TOO.\n  }\n}\n\nexport interface Element {\n  name: string;\n  position: number;\n  surname: string;\n  birth: string;\n}\n\nconst ELEMENT_DATA: Element[] = [\n  { position: 1, name: 'Albert', surname: 'Einstein', birth: '1879' },\n  { position: 2, name: 'Marie', surname: 'Curie', birth: '1867' },\n  { position: 3, name: 'Enrico', surname: 'Fermi', birth: '1901' },\n  { position: 4, name: 'Dmitri', surname: 'Mendeleev', birth: '1834' },\n  { position: 5, name: 'Alfred', surname: 'Nobel', birth: '1833' },\n  { position: 6, name: 'Ernest', surname: 'Lawrence', birth: '1901' },\n  { position: 7, name: 'Glenn', surname: 'Seaborg', birth: '1912' },\n  { position: 8, name: 'Niels', surname: 'Bohr', birth: '1885' },\n  { position: 9, name: 'Lise', surname: 'Meitner', birth: '1878' },\n  { position: 10, name: 'Wilhelm', surname: 'Röntgen', birth: '1845' },\n  { position: 11, name: 'Nicolaus', surname: 'Copernicus', birth: '1473' },\n  { position: 12, name: 'Georgy', surname: 'Flyorov', birth: '1913' },\n  { position: 13, name: 'Yuri', surname: 'Oganessian', birth: '1933' },\n  { position: 14, name: 'Johan', surname: 'Gadolin', birth: '1760' },\n  { position: 15, name: 'Pierre', surname: 'Curie', birth: '1859' },\n];\n","module.exports = \"mat-form-field {\\r\\n  margin-top:15px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9leGFtcGxlcy9wcm9wZXJ0eS1vcHRpb25zL3Byb3BlcnR5LW9wdGlvbnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWU7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2V4YW1wbGVzL3Byb3BlcnR5LW9wdGlvbnMvcHJvcGVydHktb3B0aW9ucy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gIG1hcmdpbi10b3A6MTVweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<p>Demonstrates how to handle filtering for specific properties of table items.</p>\\n<p>In this example the table lists space-crafts. A space-craft has a captain. A captain has some properties.\\n  Filtering for captain's name is done with an exact match. The rest of the properties are filtered with ANYWHERE filter type.\\n</p>\\n\\n<!-- Filtering properties for captain.name are set to be an exact match by using propertyOptions binding-->\\n<mat-table matTableFilter [exampleEntity]=\\\"filterEntity\\\" [propertyOptions]=\\\"propertyOptions\\\"\\n[filterType]=\\\"filterType\\\" [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"filterEntity.name\\\">\\n      </mat-form-field>\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"captainName\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <input matInput placeholder=\\\"Captain Name\\\" [(ngModel)]=\\\"filterEntity.captain.name\\\">\\n      </mat-form-field>\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.captain.name}} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"captainSurname\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <input matInput placeholder=\\\"Captain Surname\\\" [(ngModel)]=\\\"filterEntity.captain.surname\\\">\\n      </mat-form-field>\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.captain.surname}} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"isConstitutionClass\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n          <mat-slide-toggle\\n          class=\\\"constitution-padding\\\"\\n          [(ngModel)]=\\\"filterEntity.isConstitutionClass\\\">\\n        Constitution Class\\n      </mat-slide-toggle>\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.isConstitutionClass}} </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AddToShowCase } from '../../add-to-showcase';\nimport { MatTableDataSource } from '@angular/material';\nimport { MatTableFilter, PropertyOptions } from 'mat-table-filter';\n\nexport class Captain {\n  name: string;\n  surname: string;\n}\n\nexport class SpaceCraft {\n  name: string;\n  isConstitutionClass: boolean;\n  captain: Captain;\n}\n\nconst SPACECRAFT_DATA: SpaceCraft[] = [\n  {name: 'Endurance', isConstitutionClass: false, captain: {name: 'Joseph', surname: 'Cooper'}},\n  {name: 'Enterprise', isConstitutionClass: true, captain: {name: 'Christopher', surname: 'Pike'}},\n  {name: 'Enterprise', isConstitutionClass: true, captain: {name: 'Talha', surname: 'Türe'}},\n  {name: 'Discovery', isConstitutionClass: true, captain: {name: 'Christopher', surname: 'Pike'}},\n  {name: 'Enterprise', isConstitutionClass: false, captain: {name: 'Jean-Luc', surname: 'Pickard'}}\n];\n\n@Component({\n  selector: 'app-property-options',\n  templateUrl: './property-options.component.html',\n  styleUrls: ['./property-options.component.css']\n})\n@AddToShowCase('filter', 'property-options.component', 'Changing Property Options')\nexport class PropertyOptionsComponent implements OnInit {\n  filterEntity: SpaceCraft;\n  filterType: MatTableFilter;\n\n  propertyOptions: PropertyOptions;\n\n  displayedColumns: string[] = ['name', 'captainName', 'captainSurname', 'isConstitutionClass'];\n  dataSource;\n  constructor() {\n  }\n\n  ngOnInit() {\n    // Do not forget to initialize your object and it's non-primitive properties\n    this.filterEntity = new SpaceCraft();\n    this.filterEntity.captain = new Captain();\n    this.filterEntity.isConstitutionClass = false; // leaving a filter property undefined means you want all the data without filtering\n    this.dataSource = new MatTableDataSource(SPACECRAFT_DATA);\n\n    // captain.name property filtering needs an exact match with case sensitiveness\n    // All other properties will be filtered with ANYWHERE search\n    this.filterType = MatTableFilter.ANYWHERE;\n    this.propertyOptions = {'captain.name': {filterType: MatTableFilter.EQUALS, caseSensitive: true}};\n  }\n}\n","module.exports = \".constitution-padding{\\r\\n  padding-left:15px;\\r\\n}\\r\\n\\r\\nmat-form-field {\\r\\n  margin-top:15px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9leGFtcGxlcy9zaW1wbGUtZmlsdGVyL3NpbXBsZS1maWx0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGVBQWU7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2V4YW1wbGVzL3NpbXBsZS1maWx0ZXIvc2ltcGxlLWZpbHRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnN0aXR1dGlvbi1wYWRkaW5ne1xyXG4gIHBhZGRpbmctbGVmdDoxNXB4O1xyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgbWFyZ2luLXRvcDoxNXB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<p>Briefly demonstrates the basic usage of mat-table-filter.</p>\\n<mat-table matTableFilter [exampleEntity]=\\\"filterEntity\\\"\\n[filterType]=\\\"filterType\\\" [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"filterEntity.name\\\">\\n      </mat-form-field>\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"captainName\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <input matInput placeholder=\\\"Captain Name\\\" [(ngModel)]=\\\"filterEntity.captain.name\\\">\\n      </mat-form-field>\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.captain.name}} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"captainSurname\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <input matInput placeholder=\\\"Captain Surname\\\" [(ngModel)]=\\\"filterEntity.captain.surname\\\">\\n      </mat-form-field>\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.captain.surname}} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"isConstitutionClass\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n          <mat-slide-toggle\\n          class=\\\"constitution-padding\\\"\\n          [(ngModel)]=\\\"filterEntity.isConstitutionClass\\\">\\n        Constitution Class\\n      </mat-slide-toggle>\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.isConstitutionClass}} </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AddToShowCase } from '../../add-to-showcase';\nimport { MatTableDataSource } from '@angular/material';\nimport { MatTableFilter } from 'mat-table-filter';\n\nexport class Captain {\n  name: string;\n  surname: string;\n}\n\nexport class SpaceCraft {\n  name: string;\n  isConstitutionClass: boolean;\n  captain: Captain;\n}\n\nconst SPACECRAFT_DATA: SpaceCraft[] = [\n  {name: 'Endurance', isConstitutionClass: false, captain: {name: 'Joseph', surname: 'Cooper'}},\n  {name: 'Enterprise', isConstitutionClass: true, captain: {name: 'Christopher', surname: 'Pike'}},\n  {name: 'Enterprise', isConstitutionClass: true, captain: {name: 'Talha', surname: 'Türe'}},\n  {name: 'Discovery', isConstitutionClass: true, captain: {name: 'Christopher', surname: 'Pike'}},\n  {name: 'Enterprise', isConstitutionClass: false, captain: {name: 'Jean-Luc', surname: 'Pickard'}}\n];\n\n@Component({\n  selector: 'app-simple-filter',\n  templateUrl: './simple-filter.component.html',\n  styleUrls: ['./simple-filter.component.css']\n})\n@AddToShowCase('filter', 'simple-filter.component', 'Simple Filter')\nexport class SimpleFilterComponent implements OnInit {\n  filterEntity: SpaceCraft;\n  filterType: MatTableFilter;\n  displayedColumns: string[] = ['name', 'captainName', 'captainSurname', 'isConstitutionClass'];\n  dataSource;\n  constructor() {\n  }\n\n  ngOnInit() {\n    // Do not forget to initialize your object and it's non-primitive properties\n    this.filterEntity = new SpaceCraft();\n    this.filterEntity.captain = new Captain();\n    this.filterEntity.isConstitutionClass = false; // leaving a filter property undefined means you want all the data without filtering\n    this.filterType = MatTableFilter.ANYWHERE;\n    this.dataSource = new MatTableDataSource(SPACECRAFT_DATA);\n  }\n}\n","module.exports = \":host\\r\\ntable {\\r\\n  border-collapse: collapse;\\r\\n  border-radius: 2px;\\r\\n  border-spacing: 0;\\r\\n  margin: 10px;\\r\\n  width: 98%;\\r\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12);\\r\\n}\\r\\n:host\\r\\nth {\\r\\n  background: #f5f5f5;\\r\\n  font-weight: 400;\\r\\n  max-width: 100px;\\r\\n  padding: 13px 32px;\\r\\n  text-align: left;\\r\\n}\\r\\n:host\\r\\ntd {\\r\\n  font-weight: 400;\\r\\n  padding: 8px 16px;\\r\\n}\\r\\n@media (max-width: 720px) {\\r\\n  :host\\r\\n  table {\\r\\n    margin: 0 0 32px 0;\\r\\n  }\\r\\n  :host\\r\\n  th {\\r\\n    background: #f5f5f5;\\r\\n    padding: 6px 16px;\\r\\n  }\\r\\n  :host\\r\\n  td {\\r\\n    padding: 4px 8px;\\r\\n  }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9wYWdlLXN0eWxlcy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsWUFBWTtFQUNaLFVBQVU7RUFDVixzRUFBc0U7QUFDeEU7QUFDQTs7RUFFRSxtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0FBQ2xCO0FBQ0E7O0VBRUUsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjtBQUdBO0VBQ0U7O0lBRUUsa0JBQWtCO0VBQ3BCO0VBQ0E7O0lBRUUsbUJBQW1CO0lBQ25CLGlCQUFpQjtFQUNuQjtFQUNBOztJQUVFLGdCQUFnQjtFQUNsQjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9leHBvcnRlci9leHBvcnRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3RcclxudGFibGUge1xyXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xyXG4gIG1hcmdpbjogMTBweDtcclxuICB3aWR0aDogOTglO1xyXG4gIGJveC1zaGFkb3c6IDAgMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMjQpLCAwIDAgMnB4IHJnYmEoMCwgMCwgMCwgMC4xMik7XHJcbn1cclxuOmhvc3RcclxudGgge1xyXG4gIGJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBtYXgtd2lkdGg6IDEwMHB4O1xyXG4gIHBhZGRpbmc6IDEzcHggMzJweDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcbjpob3N0XHJcbnRkIHtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG4gIHBhZGRpbmc6IDhweCAxNnB4O1xyXG59XHJcblxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDcyMHB4KSB7XHJcbiAgOmhvc3RcclxuICB0YWJsZSB7XHJcbiAgICBtYXJnaW46IDAgMCAzMnB4IDA7XHJcbiAgfVxyXG4gIDpob3N0XHJcbiAgdGgge1xyXG4gICAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcclxuICAgIHBhZGRpbmc6IDZweCAxNnB4O1xyXG4gIH1cclxuICA6aG9zdFxyXG4gIHRkIHtcclxuICAgIHBhZGRpbmc6IDRweCA4cHg7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"docs-page\\\">\\n<mat-tab-group mat-align-tabs=\\\"start\\\">\\n  <mat-tab label=\\\"Overview\\\">\\n    <markdown (buttonClick)=\\\"onCopyClipboard()\\\" ngPreserveWhitespaces [src]=\\\"'assets/docs/exporter/README.md'\\\"></markdown>\\n  </mat-tab>\\n  <mat-tab label=\\\"API\\\">\\n    <markdown (buttonClick)=\\\"onCopyClipboard()\\\" ngPreserveWhitespaces [src]=\\\"'assets/docs/exporter/API.md'\\\"></markdown>\\n  </mat-tab>\\n  <mat-tab label=\\\"Examples\\\">\\n    <app-example-viewer *ngFor=\\\"let example of examples\\\" [exampleType]=\\\"example\\\"></app-example-viewer>\\n  </mat-tab>\\n</mat-tab-group>\\n</div>\\n\"","\nimport { BaseComponent } from './../base-component';\nimport { Component, OnInit } from '@angular/core';\nimport { showCaseExamples } from '../add-to-showcase';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'app-exporter',\n  templateUrl: './exporter.component.html',\n  styleUrls: ['./exporter.component.css']\n})\nexport class ExporterComponent extends BaseComponent implements OnInit {\n\n  constructor(notifierService: NotifierService) {\n    super(notifierService);\n   }\n\n  ngOnInit() {\n    this.examples = showCaseExamples.get('exporter');\n  }\n\n}\n","module.exports = \":host\\r\\ntable {\\r\\n  border-collapse: collapse;\\r\\n  border-radius: 2px;\\r\\n  border-spacing: 0;\\r\\n  margin: 10px;\\r\\n  width: 98%;\\r\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12);\\r\\n}\\r\\n:host\\r\\nth {\\r\\n  background: #f5f5f5;\\r\\n  font-weight: 400;\\r\\n  max-width: 100px;\\r\\n  padding: 13px 32px;\\r\\n  text-align: left;\\r\\n}\\r\\n:host\\r\\ntd {\\r\\n  font-weight: 400;\\r\\n  padding: 8px 16px;\\r\\n}\\r\\n@media (max-width: 720px) {\\r\\n  :host\\r\\n  table {\\r\\n    margin: 0 0 32px 0;\\r\\n  }\\r\\n  :host\\r\\n  th {\\r\\n    background: #f5f5f5;\\r\\n    padding: 6px 16px;\\r\\n  }\\r\\n  :host\\r\\n  td {\\r\\n    padding: 4px 8px;\\r\\n  }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9wYWdlLXN0eWxlcy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsWUFBWTtFQUNaLFVBQVU7RUFDVixzRUFBc0U7QUFDeEU7QUFDQTs7RUFFRSxtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0FBQ2xCO0FBQ0E7O0VBRUUsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjtBQUdBO0VBQ0U7O0lBRUUsa0JBQWtCO0VBQ3BCO0VBQ0E7O0lBRUUsbUJBQW1CO0lBQ25CLGlCQUFpQjtFQUNuQjtFQUNBOztJQUVFLGdCQUFnQjtFQUNsQjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9maWx0ZXIvZmlsdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdFxyXG50YWJsZSB7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XHJcbiAgbWFyZ2luOiAxMHB4O1xyXG4gIHdpZHRoOiA5OCU7XHJcbiAgYm94LXNoYWRvdzogMCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4yNCksIDAgMCAycHggcmdiYSgwLCAwLCAwLCAwLjEyKTtcclxufVxyXG46aG9zdFxyXG50aCB7XHJcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG4gIG1heC13aWR0aDogMTAwcHg7XHJcbiAgcGFkZGluZzogMTNweCAzMnB4O1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuOmhvc3RcclxudGQge1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgcGFkZGluZzogOHB4IDE2cHg7XHJcbn1cclxuXHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogNzIwcHgpIHtcclxuICA6aG9zdFxyXG4gIHRhYmxlIHtcclxuICAgIG1hcmdpbjogMCAwIDMycHggMDtcclxuICB9XHJcbiAgOmhvc3RcclxuICB0aCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xyXG4gICAgcGFkZGluZzogNnB4IDE2cHg7XHJcbiAgfVxyXG4gIDpob3N0XHJcbiAgdGQge1xyXG4gICAgcGFkZGluZzogNHB4IDhweDtcclxuICB9XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"docs-page\\\">\\n  <mat-tab-group mat-align-tabs=\\\"start\\\">\\n    <mat-tab label=\\\"Overview\\\">\\n      <markdown (buttonClick)=\\\"onCopyClipboard()\\\" ngPreserveWhitespaces [src]=\\\"'assets/docs/filter/README.md'\\\"></markdown>\\n    </mat-tab>\\n    <mat-tab label=\\\"API\\\">\\n      <markdown (buttonClick)=\\\"onCopyClipboard()\\\" ngPreserveWhitespaces [src]=\\\"'assets/docs/filter/API.md'\\\"></markdown>\\n    </mat-tab>\\n    <mat-tab label=\\\"Examples\\\">\\n      <app-example-viewer *ngFor=\\\"let example of examples\\\" [exampleType]=\\\"example\\\"></app-example-viewer>\\n    </mat-tab>\\n  </mat-tab-group>\\n  </div>\\n\"","import { showCaseExamples } from './../add-to-showcase';\nimport { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../base-component';\nimport { NotifierService } from 'angular-notifier';\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent extends BaseComponent implements OnInit {\n\n  constructor(notifierService: NotifierService) {\n    super(notifierService);\n  }\n\n  ngOnInit() {\n    this.examples = showCaseExamples.get('filter');\n    console.log(this.examples);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}